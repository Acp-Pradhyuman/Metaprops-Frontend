{"version":3,"file":"static/js/829.919e51ab.chunk.js","mappings":"4NACA,EAAoH,iCAApH,EAAwO,0B,mBC0DxO,EA/CoB,SAAC,GAAY,IAAVA,EAAS,EAATA,GACtB,GAAsBC,EAAAA,EAAAA,UAAS,GAAD,OAAIC,EAAAA,EAAAA,aAAJ,YAA8BF,IAA5D,eAAOG,EAAP,UACA,OACC,iBAAKC,MAAO,CAAEC,UAAW,SAAUC,QAAS,OAA5C,WACC,eAAIF,MAAO,CAAEG,SAAU,QAAvB,qCACA,2FACA,4BACC,cAAGH,MAAO,CAAEG,SAAU,OAAQC,MAAO,SAArC,uBACA,iBAAKC,UAAWC,EAAhB,WACC,gBAAKD,UAAWC,EAAhB,UACC,SAACC,EAAA,EAAD,CAAqBR,IAAKA,EAA1B,UACC,cAAGS,MAAM,iCAIX,gBAAKH,UAAWC,EAAhB,UACC,SAACG,EAAA,EAAD,CAAqBV,IAAKA,EAA1B,UACC,cAAGS,MAAM,kCAIX,gBAAKH,UAAWC,EAAhB,UACC,SAACI,EAAA,EAAD,CAAqBX,IAAKA,EAA1B,UACC,cAAGS,MAAM,+BAIX,gBAAKH,UAAWC,EAAhB,UACC,SAACK,EAAA,EAAD,CAAqBZ,IAAKA,EAA1B,UACC,cAAGS,MAAM,qCAKb,gBAAKH,UAAU,wBAAf,UACC,SAAC,KAAD,CACCA,UAAU,qEACVT,GAAG,uBACHgB,GAAE,oBAAehB,GAHlB,0BAUH,C,wOCzCKiB,EAAe,CACnBC,OAAQ,SAACC,EAAUC,GAAX,eAAC,UACJD,GADG,IAENX,MAAO,QACPF,QAAS,EACTe,OAAQ,MACRC,WAAY,UACZ,SAAU,CACRA,WAAY,UACZd,MAAO,SAETe,UAAW,QAVL,EAYRC,mBAAoB,iBAAO,CACzBC,OAAQ,OACRjB,MAAO,QAFW,EAIpBkB,kBAAmB,iBAAO,CACxBlB,MAAO,QACPmB,aAAc,OAFG,EAInBC,QAAS,SAACT,EAAUC,GAAX,eAAC,UACLD,GADI,IAEPG,WAAY,UACZD,OAAQ,WACRI,OAAQ,YACRI,aAAc,MACdC,QAAS,OACTP,UAAW,OAEXQ,UAAW,IATJ,EAWTC,KAAM,SAACb,EAAUC,GAAX,eAAC,UACFD,GADC,IAEJG,WAAY,UACZD,OAAQ,UACRY,YAAa,UACbJ,aAAc,MACdvB,QAAS,OANL,EAQN4B,YAAa,SAACf,EAAUC,GACtB,IAAMe,EAAUf,EAAMgB,WAAa,GAAM,EAGzC,OAAO,kBAAKjB,GAAZ,IAAsBgB,QAAAA,EAASE,WAFZ,iBAGpB,GA0gCH,UApgCgB,WAAO,IAAD,IACZrC,GAAOsC,EAAAA,EAAAA,MAAPtC,GAGFuC,IADWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACjB,GAAwBxC,EAAAA,EAAAA,YAAxB,eAAOyC,EAAP,KAAaC,EAAb,KACA,GAA8B1C,EAAAA,EAAAA,WAAS,GAAvC,eAAO2C,EAAP,KAAgBC,EAAhB,KAEA,GAAsC5C,EAAAA,EAAAA,YAAtC,eAAO6C,EAAP,KAEA,GAFA,MAE8C7C,EAAAA,EAAAA,UAAS,MAAvD,eAAO8C,EAAP,KAAwBC,EAAxB,KACA,GAAsC/C,EAAAA,EAAAA,UAAS,IAA/C,eAAOgD,EAAP,KAAoBC,EAApB,KACA,GAAoDjD,EAAAA,EAAAA,UAAS,IAA7D,eAAOkD,EAAP,KAA2BC,EAA3B,KACA,GAAkDnD,EAAAA,EAAAA,UAAS,IAA3D,eAAOoD,EAAP,KAA0BC,EAA1B,KACA,GAA0DrD,EAAAA,EAAAA,UAAS,IAAnE,eAAOsD,EAAP,KAA8BC,GAA9B,KACA,IAA8DvD,EAAAA,EAAAA,UAAS,IAAvE,iBAAOwD,GAAP,MAAgCC,GAAhC,MACA,IAAoCzD,EAAAA,EAAAA,UAAS,IAA7C,iBAAO0D,GAAP,MAAmBC,GAAnB,MACA,IAAoC3D,EAAAA,EAAAA,UAAS,IAA7C,iBAAO4D,GAAP,MAAmBC,GAAnB,MACA,IAA0C7D,EAAAA,EAAAA,UAAS,IAAnD,iBAAO8D,GAAP,MAAsBC,GAAtB,MACA,IAA4D/D,EAAAA,EAAAA,UAAS,IAArE,iBAAOgE,GAAP,MAA+BC,GAA/B,MAEA,IAA8CjE,EAAAA,EAAAA,UAAS,IAAvD,iBAAOkE,GAAP,MAAwBC,GAAxB,MAEA,IAA0CnE,EAAAA,EAAAA,UAAS,IAAnD,iBAAOoE,GAAP,MAAsBC,GAAtB,MAEA,IAA8BrE,EAAAA,EAAAA,UAAS,IAAvC,iBAAOsE,GAAP,MAAgBC,GAAhB,MAEA,IAA0CvE,EAAAA,EAAAA,UAAS,IAAnD,iBAAOwE,GAAP,MAAsBC,GAAtB,MAEA,IAAsCzE,EAAAA,EAAAA,UAAS,IAA/C,iBAAO0E,GAAP,MAAoBC,GAApB,MAEA,IAAoC3E,EAAAA,EAAAA,UAAS,IAA7C,iBAAO4E,GAAP,MAAmBC,GAAnB,MAEA,IAAgC7E,EAAAA,EAAAA,UAAS,IAAzC,iBAAO8E,GAAP,MAAiBC,GAAjB,MACA,IAA8C/E,EAAAA,EAAAA,UAAS,IAAvD,iBAAOgF,GAAP,MAAwBC,GAAxB,MAEA,IAA8BjF,EAAAA,EAAAA,UAAS,IAAvC,iBAAOkF,GAAP,MAAgBC,GAAhB,MACA,IAA0CnF,EAAAA,EAAAA,UAAS,IAAnD,iBAAsBoF,IAAtB,aAEA,IAA8BpF,EAAAA,EAAAA,UAAS,CAAC,GAAxC,iBAAOqF,GAAP,MAAgBC,GAAhB,MAEA,IAAwDtF,EAAAA,EAAAA,UAAS,CAC/D,CAAEuF,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,MAAOC,MAAO,OAEvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,OAEvB,CAAED,MAAO,OAAQC,MAAO,OACxB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,MAAOC,MAAO,SA3CzB,iBAAOC,GAAP,MA0DMC,IA1DN,MA0D0B,gCACpBC,GAAuB,mBAC7BC,EAAAA,EAAAA,YAAU,WACRC,KACAC,KACAC,IACD,GAAE,KACHH,EAAAA,EAAAA,YAAU,WACR,IACEI,EAaEX,GAbFW,SACAtB,EAYEW,GAZFX,YACAuB,EAWEZ,GAXFY,cACAC,EAUEb,GAVFa,aACAC,EASEd,GATFc,oBACAC,EAQEf,GARFe,KACAC,EAOEhB,GAPFgB,kBACAvB,EAMEO,GANFP,SACAwB,EAKEjB,GALFiB,iBACAC,EAIElB,GAJFkB,eACAC,EAGEnB,GAHFmB,WACAC,EAEEpB,GAFFoB,UACAC,EACErB,GADFqB,cAEFnC,GAAWyB,GACXjC,GAAiB0C,GACjBxC,GAA0B,CAACyC,IAC3B/B,GAAeD,GACfD,GAAiBwB,GACjBhD,EAAe,CAAEuC,MAAOU,EAAcX,MAAOW,IAC7C/C,EAAsB,CACpBqC,MAAOW,EACPZ,MAAOY,IAET,IAAIQ,EACFP,GACAA,EAAKQ,QACLR,EAAKS,QAAO,SAACC,GACX,GAAIA,EAAM,OAAOA,CAClB,IACCC,EAAU,GACdJ,GACEA,EAAOC,QACPD,EAAOK,KAAI,SAACF,GACNA,GAAMC,EAAQE,KAAK,CAAEzB,MAAOsB,EAAMvB,MAAOuB,GAC9C,IACHrD,GAA2BsD,GAQ3BlC,GAAcwB,GAEdtB,GACED,GACEA,EAAS8B,QACT9B,EAASkC,KAAI,SAACF,GACZ,MAAO,CAAEvB,MAAOuB,EAAKI,IAAK1B,MAAOsB,EAAKK,KACvC,KAELpE,EAAwC,OAArBuD,EAA4B,IAAM,KACrDnB,GACEoB,GACEA,EAAeK,QACfL,EAAeS,KAAI,SAACF,GAClB,MAAO,CAAEvB,MAAOuB,EAAMtB,MAAOsB,EAC9B,KAELnD,GAAc,CAAE6B,MAAOgB,EAAYjB,MAAOiB,GAC3C,GAAE,CAACnB,MAEJO,EAAAA,EAAAA,YAAU,WACRf,GAAa,OAACQ,SAAD,IAACA,QAAD,EAACA,GAAS+B,iBACxB,GAAE,CAAC/B,KAEJgC,QAAQC,IAAR,OAAYjC,SAAZ,IAAYA,QAAZ,EAAYA,GAAS+B,iBAAkB,UACvCC,QAAQC,IAAI1C,GAAY,8BAExB,IAAMmB,GAAY,yCAAG,8GACIwB,EAAAA,EAAAA,GACrB,MADkC,UAE/BtH,EAAAA,EAAAA,eAF+B,OAELF,IAHZ,OAKnB,QAJMyH,EADa,cAKnB,IAAIA,GAAJ,UAAIA,EAAUC,YAAd,OAAI,EAAgBC,QAClBpC,GAAU,OAACkC,QAAD,IAACA,GAAD,UAACA,EAAUC,YAAX,aAAC,EAAgBA,KAAK,IAEhCnF,EAAS,KARQ,2CAAH,qDAWZuD,GAAe,yCAAG,kHACC0B,EAAAA,EAAAA,GAAc,MAAD,UAAWtH,EAAAA,EAAAA,cADzB,OAEtB,QADMuH,EADgB,cAEtB,IAAIA,GAAJ,UAAIA,EAAUC,YAAd,OAAI,EAAgBC,SACZC,EAAY,GACV,OAARH,QAAQ,IAARA,GAAA,UAAAA,EAAUC,YAAV,SAAgBA,KAAKT,KAAI,SAACF,GACxBa,EAAUV,KAAK,CACbzB,MAAOsB,EAAKK,KACZ5B,MAAOuB,EAAKI,KAEf,IACDjC,GAAmB0C,KAEnBC,EAAAA,EAAAA,IAAM,uBAAD,OAAyBJ,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAUC,YAAnC,aAAyB,EAAgBI,QAAS,SAZnC,2CAAH,qDAef/B,GAAiB,yCAAG,kHACDyB,EAAAA,EAAAA,GAAc,MAAD,UAAWtH,EAAAA,EAAAA,gBADvB,OAExB,QADMuH,EADkB,cAExB,IAAIA,GAAJ,UAAIA,EAAUC,YAAd,OAAI,EAAgBC,SACZC,EAAY,GACV,OAARH,QAAQ,IAARA,GAAA,UAAAA,EAAUC,YAAV,SAAgBA,KAAKT,KAAI,SAACF,GACpBA,EAAKK,MACPQ,EAAUV,KAAK,CACbzB,MAAOsB,EAAKK,KACZ5B,MAAOuB,EAAKI,KAGjB,IACD3D,GAAyBoE,KAEzBC,EAAAA,EAAAA,IAAM,uBAAD,OAAyBJ,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAUC,YAAnC,aAAyB,EAAgBI,QAAS,SAdjC,2CAAH,qDAkBjBC,GAAgB,SAACC,EAAOxC,EAAOyC,EAAKC,GACxC,GAAc,eAAVF,GAOF,GANAlE,GAAc,IACdE,GAAiB,IAEjBF,IAAc,SAACqE,GACb,MAAM,GAAN,eAAWA,IAAX,OAAoB3C,GACrB,IACGA,EAAO,CACT,IAAM4C,EAAMC,MAAMC,KAAK9C,GACX4C,EAAItB,QACd,SAACyB,GAAD,OAAW5C,GAAkB6C,KAAKD,EAAKnB,KAAKqB,cAA5C,IAGFL,EAAInB,KAAI,SAACF,GACP,IAAI2B,EAAS,IAAIC,WAEjBD,EAAOE,UAAY,WACjB5E,IAAiB,SAACmE,GAAD,wBAAcA,GAAd,CAAoBO,EAAO9B,QAA3B,GAClB,EAED8B,EAAOG,cAAc9B,EACtB,GACF,OACI,GAAc,aAAViB,EACTxD,GAAWgB,QACN,GAAc,mBAAVwC,EACTtD,GAAiBc,QACZ,GAAc,gBAAVwC,EACTpD,GAAeY,QACV,GAAc,4BAAVwC,EACTtE,GAA2B8B,QAKxB,GAAc,gBAAVwC,EACP9E,EAAesC,QACV,GAAc,uBAAVwC,EACT5E,EAAsBoC,QACjB,GAAc,sBAAVwC,EACT1E,EAAqBkC,QAChB,GAAc,eAAVwC,EACTpE,GAAc4B,QACT,GAAc,eAAVwC,EACTnD,GAAWgC,QACThC,GAAWoC,KAAI,SAACF,EAAM+B,GAChBZ,IAAUY,IACZjE,GAAWiE,IAAX,kBAAwB/B,GAAxB,cAA+BkB,EAAMzC,IAExC,IAEHV,GAAcD,GAAWiC,QAAO,SAACC,GAAD,OAAUA,CAAV,UAC3B,GAAc,aAAViB,EACThD,GAAYQ,QACP,GAAc,YAAVwC,EACT5C,GAAWI,QACN,GAAc,kBAAVwC,EACT3C,GAAiBG,QACZ,GAAc,oBAAVwC,GAGT,GAFA5D,GAAmB,IACnBA,GAAmBoB,GACfA,EAAO,CACT,IAAM4C,EAAMC,MAAMC,KAAK9C,GACX4C,EAAItB,QACd,SAACyB,GAAD,OAAW5C,GAAkB6C,KAAKD,EAAKnB,KAAKqB,cAA5C,IAGFL,EAAInB,KAAI,SAACF,GACP,IAAI2B,EAAS,IAAIC,WAEjBD,EAAOE,UAAY,WACjB1E,IAA0B,SAACiE,GAAD,MAAU,CAACO,EAAO9B,OAAlB,GAC3B,EAED8B,EAAOG,cAAc9B,EACtB,GACF,MACkB,kBAAViB,EAET1D,GAAiBkB,GACE,aAAVwC,EACThF,EAAmBwC,GACA,eAAVwC,GACTtE,GAA2B8B,EAE9B,EAsBKuD,GAAY,yCAAG,WAAOC,GAAP,kHACfC,EAAO,IAAIC,UACVC,OAAO,KAAZ,OAAkB7D,SAAlB,IAAkBA,QAAlB,EAAkBA,GAAS6B,KACvBtD,GAAWgD,SACPuB,EAAMC,MAAMC,KAAKzE,IACnBuF,EAAQhB,EAAItB,QAAO,SAACyB,GAAD,OAAW5C,GAAkB6C,KAAKD,EAAKnB,KAAvC,IACnBiC,EAAOjB,EAAItB,QAAO,SAACyB,GAAD,OAAUe,KAAKC,OAAU,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAMc,MAAO,OAAS,IAA3C,IAClBD,EAAMvC,QACRgB,EAAAA,EAAAA,IACE,yCACA,yCACA,SAEOwB,EAAKxC,QACdgB,EAAAA,EAAAA,IACE,oBACA,sDACA,SAEOO,EAAIvB,OAAS,IACtBgB,EAAAA,EAAAA,IACE,wBACA,mCACA,SAGFO,EAAIvB,QACFuB,EAAInB,KAAI,SAACF,GACPkC,EAAKE,OAAO,YAAapC,EAAMA,EAAKK,KACrC,KAGH7C,IACF0E,EAAKE,OAAO,WAAY5E,IAEtBI,IACFsE,EAAKE,OAAO,cAAexE,IAEzBF,GACFwE,EAAKE,OAAO,gBAAiB1E,IAE7BwE,EAAKE,OAAO,gBAAiB,IAE3BlG,GACFgG,EAAKE,OAAO,eAAgBlG,EAAYuC,OAEtCrC,GACF8F,EAAKE,OAAO,sBAAuBhG,EAAmBqC,OAEpDnC,EAAkBwD,OAAS,GAAwC,IAAnCpD,GAAwBoD,SACtDe,EAAY,GAChBvE,EAAkB4D,KAAI,SAACF,GACrBkC,EAAKE,OAAO,OAAQpC,EAAKvB,OACzBoC,EAAUV,KAAKH,EAAKvB,MACrB,MAGC/B,GAAwBoD,OAAS,GAAKxD,EAAkBwD,OAAS,KAC/De,EAAY,GAChBnE,GAAwBwD,KAAI,SAACF,GAC3BkC,EAAKE,OAAO,OAAQpC,EAAKtB,OACzBmC,EAAUV,KAAKH,EAAKtB,MACrB,KAICtB,GAAgB0C,SACZuB,EAAMC,MAAMC,KAAKnE,IACnBiF,EAAQhB,EAAItB,QAAO,SAACyB,GAAD,OAAW5C,GAAkB6C,KAAKD,EAAKnB,KAAvC,IACnBiC,EAAOjB,EAAItB,QAAO,SAACyB,GAAD,OAAUe,KAAKC,OAAU,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAMc,MAAO,OAAS,IAA3C,IAClBD,EAAMvC,QACRgB,EAAAA,EAAAA,IACE,yCACA,yCACA,SAEOwB,EAAKxC,QACdgB,EAAAA,EAAAA,IACE,oBACA,sDACA,SAGFO,EAAIvB,QACFuB,EAAInB,KAAI,SAACF,GACPkC,EAAKE,OAAO,gBAAiBpC,EAC9B,KAIH1C,GAAcwC,SACVuB,EAAMC,MAAMC,KAAKjE,IACnB+E,EAAQhB,EAAItB,QAAO,SAACyB,GAAD,OAAW3C,GAAqB4C,KAAKD,EAAKnB,KAA1C,IACnBiC,EAAOjB,EAAItB,QACb,SAACyB,GAAD,OAAUe,KAAKC,MAAMD,KAAKC,OAAU,OAAJhB,QAAI,IAAJA,OAAA,EAAAA,EAAMc,MAAO,MAAQ,OAAS,IAA9D,IAEED,EAAMvC,QACRgB,EAAAA,EAAAA,IAAM,mBAAoB,+BAAgC,SACjDwB,EAAKxC,SACdgB,EAAAA,EAAAA,IACE,oBACA,sDACA,SAGJO,EAAIvB,QACFuB,EAAInB,KAAI,SAACF,GACPkC,EAAKE,OAAO,gBAAiBpC,EAC9B,KAEDlC,IACSA,GAAWoC,KAAI,SAACF,GACzB,OAAIA,QAAJ,IAAIA,GAAAA,EAAMyC,MACRP,EAAKE,OAAO,oBAAqBM,KAAKC,UAAU3C,GAEnD,IAEChC,GAAS8B,SACL8C,EAAO,GACb5E,GAASkC,KAAI,SAACF,GACZkC,EAAKE,OAAO,WAAYpC,EAAKvB,OAE7BmE,EAAKzC,KAAKH,EAAKvB,MAChB,IACDR,GACEC,GAAgB4B,QACd5B,GAAgB6B,QAAO,SAACC,GAAD,OAAUhC,GAAS6E,SAAS7C,EAAKvB,MAAjC,MAGzBL,GAAQ0B,SACJgD,EAAO,GACb1E,GAAQ8B,KAAI,SAACF,GACXkC,EAAKE,OAAO,iBAAkBpC,EAAKvB,OAEnCqE,EAAK3C,KAAKH,EAAKvB,MAChB,KAEC7B,IACFsF,EAAKE,OAAO,aAAcxF,GAAW6B,OAEnCzC,GACFkG,EAAKE,OAAO,mBAAwC,MAApBpG,EAA0B,KAAO,QAGjEc,GAAWgD,QACX1C,GAAgB0C,QAChBxC,GAAcwC,QACdtC,IACAI,IACAF,IACAxB,GACAE,GACAE,GACAwB,GAAWgC,QACX9B,IACAhC,GACAoC,IACAxB,IA7JiB,6CAgKQ6D,EAAAA,EAAAA,GACrB,MADkC,UAE/BtH,EAAAA,EAAAA,SACH+I,GAnKa,QAqKf,QALMxB,EAhKS,cAqKf,IAAIA,GAAJ,UAAIA,EAAUC,YAAd,OAAI,EAAgBC,UAClBE,EAAAA,EAAAA,IAAM,UAAD,OAAYJ,QAAZ,IAAYA,GAAZ,UAAYA,EAAUC,YAAtB,aAAY,EAAgBI,QAAS,WAC1CvF,EAAS,aAAD,OAAcvC,MAEtB6H,EAAAA,EAAAA,IAAM,uBAAD,OAAyBJ,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAUC,YAAnC,aAAyB,EAAgBI,QAAS,SAzK1C,oDA4KfD,EAAAA,EAAAA,IAAM,uBAAwB,wBAAyB,SA5KxC,2DAAH,sDAsLZiC,GAAsB,yCAAG,8GACNtC,EAAAA,EAAAA,GACrB,OADkC,UAE/BtH,EAAAA,EAAAA,kBACH,CACEF,GAAAA,EACAiI,IAAK,IANoB,OAS7B,QARMR,EADuB,cAS7B,IAAIA,GAAJ,UAAIA,EAAUC,YAAd,OAAI,EAAgBC,UAClBE,EAAAA,EAAAA,IAAM,yBAA0B,GAAI,WACpCtF,EAAS,sBAETsF,EAAAA,EAAAA,IAAM,uBAAD,OAAyBJ,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAUC,YAAnC,aAAyB,EAAgBI,QAAS,SAb5B,2CAAH,qDAiB5B,OACE,iCACE,SAAC,IAAD,KACA,oBAASrH,UAAU,kCAAnB,UACE,iBAAKA,UAAU,YAAf,WACE,gBAAKA,UAAU,WAAf,UACE,gBAAKA,UAAU,gCAAf,UACE,iBAAKA,UAAU,8BAAf,WACE,sCACA,kRASN,iBAAKA,UAAU,WAAf,WACE,gBAAKA,UAAU,8BAAf,UACE,kBAAMA,UAAU,oBAAhB,WACE,iBAAKA,UAAU,aAAf,WACE,mBAAOsJ,QAAQ,QAAf,kCACsB,iBAAMtJ,UAAU,cAAhB,mBAGtB,iBAAKA,UAAU,oBAAf,WACE,iBAAKA,UAAU,wBAAf,WACE,kBACE+I,KAAK,OACLpC,KAAMvD,GACNmG,UAAQ,EACRC,OAAO,2CACPC,SAAU,SAAClB,GAAD,OACRjB,GAAc,aAAciB,EAAEmB,OAAOC,MAD7B,KAIZ,gBAAK3J,UAAU,wCAAf,UACE,gBAAKA,UAAU,0BAAf,SACGsD,IAAiBA,GAAc8C,OAAS,GACvC,gBACEpG,UAAU,gBACVL,MAAO,CACLiK,OAAQ,QACRC,MAAO,OACPC,OAAQ,MALZ,SAQGxG,IACCA,GAAc8C,OAAS,GACvB9C,GACGyG,MAAMzG,GAAc8C,OAAS,GAC7BI,KAAI,SAACF,GACJ,OACE,gBACE3G,MAAO,CACLkK,MAAO,OACPD,OAAQ,OACRI,UAAW,SAEbC,IAAK3D,EACL4D,IAAI,UAGT,OAGP,yCACkB,KAChB,0EAMV,iBAAKlK,UAAU,0BAAf,WACE,2CACA,kDAGHsD,IAAiBA,GAAc8C,OAAS,IACvC,gBAAKpG,UAAU,kBAAf,SACGsD,IACCA,GAAc8C,OAAS,GACvB9C,GACGyG,MAAM,GAAI,GACVI,UACA3D,KAAI,SAACF,EAAMmB,GACV,OACE,iCACE,gBAAKwC,IAAK3D,EAAM4D,IAAI,YACpB,cACE/J,MAAM,kBACNR,MAAO,CACLyK,OAAQ,UACRC,WAAY,OAEdC,QAAS,SAAC/B,GAAD,OAvHvB,SAACA,EAAGd,GACpB,IAAM8C,EAAUjH,GAAc+C,QAAO,SAACY,EAAMuD,GAAP,OAAaA,IAAM/C,CAAnB,IACrClE,GAAiBgH,EAClB,CAoH+CE,CAAUlC,EAAGd,EAAQ,EAA5B,EACTlI,GAAIkI,MAIX,UAIX,iBAAKzH,UAAU,aAAf,WACE,0CACW,iBAAMA,UAAU,cAAhB,mBAEX,kBACE+I,KAAK,OACL/I,UAAU,eACV0K,YAAY,cACZ3F,MAAOjB,GACP2F,SAAU,SAAClB,GAAD,OAAOjB,GAAc,WAAYiB,EAAEmB,OAAO3E,MAA1C,QAGd,iBAAK/E,UAAU,aAAf,WACE,iDACkB,iBAAMA,UAAU,cAAhB,mBAElB,qBACE+E,MAAOb,GACPuF,SAAU,SAAClB,GAAD,OACRjB,GAAc,cAAeiB,EAAEmB,OAAO3E,MAD9B,QAKd,iBAAK/E,UAAU,aAAf,WACE,8CACA,kBACE+I,KAAK,OACL/I,UAAU,eAEV+E,MAAOf,GACP2G,UAAW,GACXlB,SAAU,SAAClB,GAAD,OACRjB,GAAc,iBAAkBiB,EAAEmB,OAAO3E,MADjC,QAKd,iBAAK/E,UAAU,aAAf,WACE,8CACe,iBAAMA,UAAU,cAAhB,mBAEf,gBAAKA,UAAU,oBAAf,UACE,SAAC,KAAD,CACE4K,aAAcpI,EACduC,MAAOvC,EACPiH,SAAU,SAAClB,GAAD,OAAOjB,GAAc,cAAeiB,EAApC,EACVsC,QAllBO,CACzB,CAAE9F,MAAO,gBAAiBC,MAAO,iBACjC,CAAED,MAAO,qBAAsBC,MAAO,uBAilBpB/E,OAAQO,UAId,iBAAKR,UAAU,aAAf,WACE,qDACsB,iBAAMA,UAAU,cAAhB,mBAEtB,SAAC,KAAD,CACE4K,aAAclI,EACdqC,MAAOrC,EACP+G,SAAU,SAAClB,GAAD,OAAOjB,GAAc,qBAAsBiB,EAA3C,EACVsC,QA3lBgB,CAChC,CAAE9F,MAAO,uBAAwBC,MAAO,wBACxC,CAAED,MAAO,iBAAkBC,MAAO,mBA0lBlB/E,OAAQO,QAGZ,iBAAKR,UAAU,aAAf,WACE,oDACqB,iBAAMA,UAAU,cAAhB,mBAErB,gBAAKA,UAAU,8BAAf,UACE,SAAC,IAAD,CACE8K,SAAO,EACPrB,SAAU,SAAClB,GAAD,OAAOjB,GAAc,oBAAqBiB,EAA1C,EACVsC,QAASjI,EACT8H,YAAY,wBACZzK,OAAQO,EACRuE,MAAO/B,QAGX,gBAAKhD,UAAU,8BAAf,UACE,SAAC,KAAD,CACE8K,SAAS,EACTD,QAAS/H,EACT7C,OAAQO,EACRiJ,SAAU,SAAClB,GAAD,OACRjB,GAAc,0BAA2BiB,EADjC,EAGVxD,MAAO/B,gBAMjB,iBAAKhD,UAAU,8BAAf,WACE,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,iBAAMA,UAAU,oBAAhB,UACE,iBAAKA,UAAU,aAAf,WACE,mBAAOsJ,QAAQ,QAAf,+BACqB,KACnB,iBAAMtJ,UAAU,cAAhB,mBAEF,iBAAKA,UAAU,uCAAf,WACE,iBAAKA,UAAU,wBAAf,WACE,kBACE+I,KAAK,OACLS,OAAO,0CACPC,SAAU,SAAClB,GAAD,OACRjB,GAAc,kBAAmBiB,EAAEmB,OAAOC,MADlC,KAIZ,gBAAK3J,UAAU,oBAAf,SACGwD,GAAuB4C,OAAS,GAC/B,gBAAKpG,UAAU,gBAAf,SACGwD,GAAuB4C,OAAS,GAC/B5C,GAAuBgD,KAAI,SAACF,GAC1B,OAAO,gBAAK2D,IAAK3D,EAAM4D,IAAI,UAC5B,OAGL,yCACkB,KAChB,wEAKR,iBAAKlK,UAAU,0BAAf,WACE,2CACA,0DAcV,gBAAKA,UAAU,WAAf,UACE,iBAAMA,UAAU,oBAAhB,UACE,iBAAKA,UAAU,aAAf,WACE,mBAAOsJ,QAAQ,QAAf,gCACsB,KACpB,iBAAMtJ,UAAU,cAAhB,mBAEF,iBAAKA,UAAU,uCAAf,WACE,iBACEA,UAAU,wBACVL,MAAO,CAAEqB,OAAQ,sBAFnB,WAIE,kBACE+H,KAAK,OACLS,OAAO,+BACPC,SAAU,SAAClB,GAAD,OACRjB,GAAc,gBAAiBiB,EAAEmB,OAAOC,MADhC,KAIZ,gBAAK3J,UAAU,oBAAf,UACE,yBACG4D,GAAcwC,OAAS,GACtB,mCAAMxC,GAAc,UAApB,aAAM,EAAkB+C,QAExB,0BACE,2BACU,OAAP9B,SAAO,IAAPA,IAAA,UAAAA,GAASkG,iBAAT,eAAoBC,WAAY,eAO7C,iBAAKhL,UAAU,0BAAf,WACE,mCACA,6DAOZ,kBAAMA,UAAU,oBAAhB,WACE,iBAAKA,UAAU,oCAAf,WACE,kDACA,iBAAKA,UAAU,MAAf,UACGoE,IACCA,GAAWgC,OAAS,GACpBhC,GAAWoC,KAAI,SAACF,EAAM+B,GACpB,OACE,iCACE,iBAAKrI,UAAU,WAAf,UACGqI,EAAO,IAAK,oCAEb,kBACEU,KAAK,OACL/I,UAAU,eACV0K,YAAY,OACZ3F,MAAOuB,EAAKyC,KACZU,SAAU,SAAClB,GAAD,OACRjB,GACE,aACAiB,EAAEmB,OAAO3E,MACT,OACAsD,EALM,QAUd,iBAAKrI,UAAU,WAAf,UACGqI,EAAO,IAAK,oCACb,iBAAKrI,UAAU,aAAf,WACE,kBACE+I,KAAK,OACL/I,UAAU,eACV0K,YAAY,OACZ3F,MAAOuB,EAAKK,KACZ8C,SAAU,SAAClB,GAAD,OACRjB,GACE,aACAiB,EAAEmB,OAAO3E,MACT,OACAsD,EALM,KASZ,cACErI,UAAU,eACVsK,QAAS,kBAzhBH7C,EA0hByBY,OAxhB7DhE,GAAcD,GAAWiC,QAAO,SAACC,EAAM+B,GAAP,OAAgBA,IAASZ,CAAzB,KAFG,IAACA,CAyhBG,YAQpB,KACH,cACEwD,KAAK,sBACLX,QApjBW,WACzBlG,GAAWgC,OAAS,GACtBgB,EAAAA,EAAAA,IAAM,gDAAiD,GAAI,SAG7D/C,IAAc,SAACqD,GAAD,wBAAcA,GAAd,CAAoB,CAAEqB,KAAM,GAAIpC,KAAM,KAAtC,GACf,EA4iBiB,6BAQJ,iBAAK3G,UAAU,aAAaL,MAAO,CAAEmK,OAAQ,MAA7C,WACE,0CACW,iBAAM9J,UAAU,cAAhB,mBAEX,gBAAKA,UAAU,0BAAf,UACE,SAAC,KAAD,CACE8K,SAAS,EACTD,QAASrG,GACTvE,OAAQO,EACRiJ,SAAU,SAAClB,GAAD,OAAOjB,GAAc,WAAYiB,EAAjC,EACVxD,MAAOT,GACP4G,oBAAoB,UAI1B,iBAAKlL,UAAU,aAAf,WACE,kDACmB,iBAAMA,UAAU,cAAhB,mBAEnB,iBAAKA,UAAU,0BAAf,WACE,iBACEA,UAA+B,MAApBsC,EAA0B,aAAe,GACpDgI,QAAS,kBAAMhD,GAAc,WAAY,IAAhC,EAFX,iBAMA,iBACEtH,UAA+B,MAApBsC,EAA0B,aAAe,GACpDgI,QAAS,kBAAMhD,GAAc,WAAY,IAAhC,EAFX,uBAQJ,iBAAKtH,UAAU,aAAaL,MAAO,CAAEmK,OAAQ,KAA7C,WACE,gDACiB,iBAAM9J,UAAU,cAAhB,mBAEjB,gBAAKA,UAAU,0BAAf,UACE,SAAC,KAAD,CACE8K,SAAS,EACTD,QAAS5F,GACTwE,SAAU,SAAClB,GAAD,OAAOjB,GAAc,UAAWiB,EAAhC,EACVxD,MAAOL,GACPwG,oBAAoB,EACpBjL,OAAQO,UAqBd,iBAAKR,UAAU,aAAaL,MAAO,CAAEmK,OAAQ,KAA7C,WACE,4CACa,iBAAM9J,UAAU,cAAhB,mBAEb,SAAC,KAAD,CACE4K,aAAc1H,GACd6B,MAAO7B,GACPuG,SAAU,SAAClB,GAAD,OAAOjB,GAAc,aAAciB,EAAnC,EACVsC,QA51BS,CACzB,CAAE9F,MAAO,MAAOC,MAAO,mBA41BP/E,OAAQO,QAeZ,iBAAKR,UAAU,cAAf,WACE,cACEA,UAAU,oEACVsK,QAAShC,GAFX,qBAMA,cACEtI,UAAU,2DACVsK,QAAS,kBAAMlI,GAAW,EAAjB,EAFX,sCAYZ,SAAC,IAAD,CAAOH,KAAMA,EAAMkJ,QAAS,kBAAMjJ,GAAQ,EAAd,EAA5B,UACE,SAAC,IAAD,CAAa3C,GAAE,OAAE8C,QAAF,IAAEA,OAAF,EAAEA,EAAaqE,SAEhC,SAAC,IAAD,CAAOzE,KAAME,EAASgJ,QAAS,kBAAM/I,GAAW,EAAjB,EAA/B,UACE,0BACE,gBAAKpC,UAAU,GAAGoL,KAAK,WAAvB,UACE,iBAAKpL,UAAU,gBAAf,WACE,gBAAKA,UAAU,aAAf,UACE,iBAAKA,UAAU,+BAAf,WACE,8CACA,6FAKJ,iBAAKA,UAAU,4BAA4BL,MAAO,CAAE0L,IAAK,OAAzD,WACE,cACErL,UAAU,+BACVsK,QAASjB,GAFX,kBAMA,cACErJ,UAAU,oEACVsK,QAAS,kBAAMlI,GAAW,EAAjB,EAFX,6BAWV,SAAC,IAAD,MAGL,C","sources":["webpack://metaprops-web/./src/components/AddNftModal/AddNftModal.module.css?2122","components/AddNftModal/index.js","components/EditNft/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"shares\":\"AddNftModal_shares__3NGqN\",\"shares_title\":\"AddNftModal_shares_title__88JuL\",\"share_icons\":\"AddNftModal_share_icons__zZWJQ\",\"or_tag\":\"AddNftModal_or_tag__NMQ-0\",\"or_line\":\"AddNftModal_or_line__L-ZhC\",\"icon\":\"AddNftModal_icon__LVhf0\",\"or_box\":\"AddNftModal_or_box__BuVWo\",\"share_text\":\"AddNftModal_share_text__j4owR\",\"btn_style\":\"AddNftModal_btn_style__wO8+6\"};","import React, { useState } from 'react';\nimport {\n\tFacebookShareButton,\n\tLinkedinShareButton,\n\tTelegramShareButton,\n\tWhatsappShareButton\n} from 'react-share';\nimport { Link } from 'react-router-dom';\n\nimport styles from './AddNftModal.module.css';\nimport { endpoints } from './../../utils/endpoints';\n\nconst AddNftModal = ({ id }) => {\n\tconst [url, setUrl] = useState(`${endpoints.baseShareUrl}/${id}`);\n\treturn (\n\t\t<div style={{ textAlign: 'center', padding: '1em' }}>\n\t\t\t<h2 style={{ fontSize: '27px' }}>NFT Added successfully</h2>\n\t\t\t<p>Check on your profile to view the NFT or click the link below.</p>\n\t\t\t<div>\n\t\t\t\t<p style={{ fontSize: '17px', color: 'black' }}>Share to</p>\n\t\t\t\t<div className={styles.share_icons}>\n\t\t\t\t\t<div className={styles.icon}>\n\t\t\t\t\t\t<FacebookShareButton url={url}>\n\t\t\t\t\t\t\t<i class='fa-brands fa-facebook-f'></i>\n\t\t\t\t\t\t</FacebookShareButton>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={styles.icon}>\n\t\t\t\t\t\t<LinkedinShareButton url={url}>\n\t\t\t\t\t\t\t<i class='fa-brands fa-linkedin-in'></i>\n\t\t\t\t\t\t</LinkedinShareButton>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={styles.icon}>\n\t\t\t\t\t\t<WhatsappShareButton url={url}>\n\t\t\t\t\t\t\t<i class='fa-brands fa-whatsapp'></i>\n\t\t\t\t\t\t</WhatsappShareButton>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={styles.icon}>\n\t\t\t\t\t\t<TelegramShareButton url={url}>\n\t\t\t\t\t\t\t<i class='fa-brands fa-telegram'></i>\n\t\t\t\t\t\t</TelegramShareButton>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='modal-footer mt-4 p-0'>\n\t\t\t\t<Link\n\t\t\t\t\tclassName='btn btn-block  btn-primary btn-lg font-weight-medium auth-form-btn'\n\t\t\t\t\tid='js-ready-sell-modal2'\n\t\t\t\t\tto={`/view-nft/${id}`}\n\t\t\t\t>\n\t\t\t\t\tView NFT\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddNftModal;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useDispatch } from \"react-redux\";\n\n//Components\nimport Header from \"../../components/Header\";\nimport HomePageFooter from \"../../components/Home/HomePageFooter\";\nimport Modal from \"../../components/commons/Modal/Modal.jsx\";\nimport AddNftModal from \"../../components/AddNftModal\";\nimport { PopUp } from \"../../utils/utility\";\nimport { handleApiCall } from \"../../api\";\nimport { endpoints } from \"../../utils/endpoints\";\nimport Loader from \"../commons/Loader\";\n\nconst customStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    color: \"black\",\n    padding: 5,\n    margin: \"0px\",\n    background: \"#e8e9e9\",\n    \":hover\": {\n      background: \"#4472c7\",\n      color: \"white\",\n    },\n    boxShadow: \"none\",\n  }),\n  indicatorSeparator: () => ({\n    border: \"none\",\n    color: \"black\",\n  }),\n  dropdownIndicator: () => ({\n    color: \"black\",\n    paddingRight: \".5em\",\n  }),\n  control: (provided, state) => ({\n    ...provided,\n    background: \"#e8e9e9\",\n    margin: \"10px 0px\",\n    border: \"0px solid\",\n    borderRadius: \"0px\",\n    outline: \"none\",\n    boxShadow: \"none\",\n    // height: 45,\n    minHeight: 45,\n  }),\n  menu: (provided, state) => ({\n    ...provided,\n    background: \"#e8e9e9\",\n    margin: \"5px 0px\",\n    borderColor: \"#e8e9e9\",\n    borderRadius: \"0px\",\n    padding: \"0px\",\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = \"opacity 300ms\";\n\n    return { ...provided, opacity, transition };\n  },\n  //   placeholder: () => ({\n  //     color: \"black\",\n  //   }),\n};\n\nconst EditNft = () => {\n  const { id } = useParams();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [show, setShow] = useState();\n  const [showDel, setShowDel] = useState(false);\n\n  const [nftResponse, setNftResponse] = useState();\n\n  const [informationType, setInformationType] = useState(\"1\");\n  const [licenseType, setLicenseType] = useState(\"\");\n  const [constructionStatus, setConstructionStatus] = useState(\"\");\n  const [creatorCollection, setCreatorCollection] = useState([]);\n  const [creatorCollectionList, setCreatorCollectionList] = useState([]);\n  const [creatorCollectionSelect, setCreatorCollectionSelect] = useState([]);\n  const [blockChain, setBlockChain] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState([]);\n  const [previewImages, setPreviewImages] = useState([]);\n  const [blockchainImagePreview, setBlockchainImagePreview] = useState([]);\n\n  const [blockchainImage, setBlockchainImage] = useState([]);\n\n  const [blockchainZip, setBlockchainZip] = useState([]);\n\n  const [nftName, setNftName] = useState(\"\");\n\n  const [externalLinks, setExternalLinks] = useState(\"\");\n\n  const [description, setDiscription] = useState(\"\");\n\n  const [properties, setProperties] = useState([]);\n\n  const [typology, setTypology] = useState([]);\n  const [typologyOptions, setTypologyOptions] = useState([]);\n\n  const [drawing, setDrawing] = useState([]);\n  const [customDrawing, setCustomDrawing] = useState([]);\n\n  const [nftData, setNftData] = useState({});\n\n  const [optionsDrawingFormat, setOptionsDrawingFormat] = useState([\n    { value: \"3dm\", label: \"3DM\" },\n    { value: \"3ds\", label: \"3DS\" },\n    { value: \"3mf\", label: \"3MF\" },\n    { value: \"amf\", label: \"AMF\" },\n    { value: \"blend\", label: \"BLEND\" },\n    { value: \"dae\", label: \"DAE\" },\n    { value: \"dgn\", label: \"DGN\" },\n    { value: \"dwf\", label: \"DWF\" },\n    { value: \"dwg\", label: \"DWG\" },\n    { value: \"dxf\", label: \"DXF\" },\n    { value: \"exl\", label: \"EXL\" },\n    { value: \"fbx\", label: \"FBX\" },\n    { value: \"glb\", label: \"GLB\" },\n    { value: \"gltf\", label: \"GLTF\" },\n    { value: \"iam\", label: \"IAM\" },\n    { value: \"ifc\", label: \"IFC\" },\n    { value: \"iges\", label: \"IGES\" },\n    { value: \"ipt\", label: \"IPT\" },\n\n    { value: \"jpg\", label: \"JPG\" },\n    { value: \"ma\", label: \"MA\" },\n    { value: \"max\", label: \"MAX\" },\n    { value: \"obj\", label: \"OBJ\" },\n    { value: \"pdf\", label: \"PDF\" },\n    { value: \"ply\", label: \"PLY\" },\n    { value: \"png\", label: \"PNG\" },\n    { value: \"rfa\", label: \"RFA\" },\n    { value: \"rft\", label: \"RFT\" },\n    { value: \"rte\", label: \"RTE\" },\n    { value: \"rvt\", label: \"RVT\" },\n    { value: \"sat\", label: \"SAT\" },\n    { value: \"skp\", label: \"SKP\" },\n    { value: \"sldasm\", label: \"SLDASM\" },\n    { value: \"sldprt\", label: \"SLDPRT\" },\n    { value: \"step\", label: \"STEP\" },\n    { value: \"stl\", label: \"STL\" },\n    { value: \"stp\", label: \"STP\" },\n\n    { value: \"text\", label: \"TXT\" },\n    { value: \"uasset\", label: \"UASSET\" },\n    { value: \"unity\", label: \"UNITY\" },\n    { value: \"x3d\", label: \"X3D\" },\n    { value: \"xsi\", label: \"XSI\" },\n  ]);\n\n  const optionsLicenseType = [\n    { value: \"Constructible\", label: \"Constructible\" },\n    { value: \"Digital Experience\", label: \"Digital Experience\" },\n  ];\n  const optionsConstructionStatus = [\n    { value: \"Real World Completed\", label: \"Real World Completed\" },\n    { value: \"Digital Design\", label: \"Digital Design\" },\n  ];\n  const optionsForEtherium = [\n    { value: \"Eth\", label: \"ETH on polygon\" },\n    // { value: \"Matic\", label: \"Matic\" },\n  ];\n  const allowedExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.gif)$/i;\n  const allowedZipExtensions = /(\\.rar|\\.zip)$/i;\n  useEffect(() => {\n    getTopologyList();\n    getCollectionList();\n    getNftDetail();\n  }, []);\n  useEffect(() => {\n    const {\n      nft_name,\n      description,\n      external_link,\n      licence_type,\n      construction_status,\n      tags,\n      custom_properties,\n      typology,\n      information_type,\n      drawing_format,\n      blockchain,\n      nft_media,\n      preview_image,\n    } = nftData;\n    setNftName(nft_name);\n    setPreviewImages(nft_media);\n    setBlockchainImagePreview([preview_image]);\n    setDiscription(description);\n    setExternalLinks(external_link);\n    setLicenseType({ label: licence_type, value: licence_type });\n    setConstructionStatus({\n      label: construction_status,\n      value: construction_status,\n    });\n    let result =\n      tags &&\n      tags.length &&\n      tags.filter((item) => {\n        if (item) return item;\n      });\n    let newTAgs = [];\n    result &&\n      result.length &&\n      result.map((item) => {\n        if (item) newTAgs.push({ label: item, value: item });\n      });\n    setCreatorCollectionSelect(newTAgs);\n\n    let customProp = [];\n    // custom_properties &&\n    //   custom_properties.length &&\n    //   custom_properties.map((item) => {\n    //     customProp.push(JSON.parse(item));\n    //   });\n    setProperties(custom_properties);\n\n    setTypology(\n      typology &&\n        typology.length &&\n        typology.map((item) => {\n          return { value: item._id, label: item.name };\n        })\n    );\n    setInformationType(information_type === \"3D\" ? \"2\" : \"1\");\n    setDrawing(\n      drawing_format &&\n        drawing_format.length &&\n        drawing_format.map((item) => {\n          return { value: item, label: item };\n        })\n    );\n    setBlockChain({ label: blockchain, value: blockchain });\n  }, [nftData]);\n\n  useEffect(() => {\n    setProperties(nftData?.customProperties);\n  }, [nftData]);\n\n  console.log(nftData?.customProperties, \"NFTTTT\");\n  console.log(properties, \"pppppppppppppppppppppppppp\");\n\n  const getNftDetail = async () => {\n    const response = await handleApiCall(\n      \"get\",\n      `${endpoints.getNFTDetails}${id}`\n    );\n    if (response?.data?.success) {\n      setNftData(response?.data?.data[0]);\n    } else {\n      navigate(\"/\");\n    }\n  };\n  const getTopologyList = async () => {\n    const response = await handleApiCall(\"get\", `${endpoints.getTypology}`);\n    if (response?.data?.success) {\n      const finalData = [];\n      response?.data?.data.map((item) => {\n        finalData.push({\n          label: item.name,\n          value: item._id,\n        });\n      });\n      setTypologyOptions(finalData);\n    } else {\n      PopUp(\"Something Went Wrong\", response?.data?.message, \"error\");\n    }\n  };\n  const getCollectionList = async () => {\n    const response = await handleApiCall(\"get\", `${endpoints.getCollection}`);\n    if (response?.data?.success) {\n      const finalData = [];\n      response?.data?.data.map((item) => {\n        if (item.name) {\n          finalData.push({\n            label: item.name,\n            value: item._id,\n          });\n        }\n      });\n      setCreatorCollectionList(finalData);\n    } else {\n      PopUp(\"Something Went Wrong\", response?.data?.message, \"error\");\n    }\n  };\n\n  const handleNftData = (field, value, key, index) => {\n    if (field === \"fileUpload\") {\n      setFileUpload([]);\n      setPreviewImages([]);\n\n      setFileUpload((prev) => {\n        return [...prev, ...value];\n      });\n      if (value) {\n        const arr = Array.from(value);\n        let image = arr.filter(\n          (file) => !allowedExtensions.exec(file.name.toLowerCase())\n        );\n\n        arr.map((item) => {\n          let reader = new FileReader();\n\n          reader.onloadend = () => {\n            setPreviewImages((prev) => [...prev, reader.result]);\n          };\n\n          reader.readAsDataURL(item);\n        });\n      }\n    } else if (field === \"nft-name\") {\n      setNftName(value);\n    } else if (field === \"external-links\") {\n      setExternalLinks(value);\n    } else if (field === \"description\") {\n      setDiscription(value);\n    } else if (field === \"creatorCollectionSelect\") {\n      setCreatorCollectionSelect(value);\n    }\n    // else if (field === 'completionStatus') {\n    // \tsetCompletedStatus(value);\n    // }\n    else if (field === \"licenceType\") {\n      setLicenseType(value);\n    } else if (field === \"constructionStatus\") {\n      setConstructionStatus(value);\n    } else if (field === \"creatorCollection\") {\n      setCreatorCollection(value);\n    } else if (field === \"blockChain\") {\n      setBlockChain(value);\n    } else if (field === \"properties\") {\n      properties.length &&\n        properties.map((item, indx) => {\n          if (index === indx) {\n            properties[indx] = { ...item, [key]: value };\n          }\n        });\n\n      setProperties(properties.filter((item) => item));\n    } else if (field === \"typology\") {\n      setTypology(value);\n    } else if (field === \"drawing\") {\n      setDrawing(value);\n    } else if (field === \"customDrawing\") {\n      setCustomDrawing(value);\n    } else if (field === \"blockchainImage\") {\n      setBlockchainImage([]);\n      setBlockchainImage(value);\n      if (value) {\n        const arr = Array.from(value);\n        let image = arr.filter(\n          (file) => !allowedExtensions.exec(file.name.toLowerCase())\n        );\n\n        arr.map((item) => {\n          let reader = new FileReader();\n\n          reader.onloadend = () => {\n            setBlockchainImagePreview((prev) => [reader.result]);\n          };\n\n          reader.readAsDataURL(item);\n        });\n      }\n    } else if (field === \"blockchainZip\") {\n      // setBlockchainZip([]);\n      setBlockchainZip(value);\n    } else if (field === \"infoType\") {\n      setInformationType(value);\n    } else if (field === \"collection\") {\n      setCreatorCollectionSelect(value);\n    }\n  };\n\n  const handleCustomProperties = () => {\n    if (properties.length > 9) {\n      PopUp(\"You cannot add more than 10 custom properties\", \"\", \"error\");\n      return;\n    }\n    setProperties((prev) => [...prev, { type: \"\", name: \"\" }]);\n  };\n  const handleDrawingFormat = () => {\n    if (customDrawing) {\n      setOptionsDrawingFormat((prev) => [\n        ...prev,\n        { value: customDrawing, label: customDrawing },\n      ]);\n    }\n    setCustomDrawing(\"\");\n  };\n  const handleRemoveCustomProperties = (index) => {\n    \n    setProperties(properties.filter((item, indx) => indx !== index));\n  };\n  const handleSubmit = async (e) => {\n    let form = new FormData();\n    form.append(\"id\", nftData?._id);\n    if (fileUpload.length) {\n      const arr = Array.from(fileUpload);\n      let image = arr.filter((file) => !allowedExtensions.exec(file.name));\n      let size = arr.filter((file) => Math.round(file?.size / 1024) >= 5096);\n      if (image.length) {\n        PopUp(\n          \"Only Image Allowed. (JPEG,JPG,PNG,GIF)\",\n          \"Please select allowed image type only.\",\n          \"error\"\n        );\n      } else if (size.length) {\n        PopUp(\n          \"Image Size Exceed\",\n          \"File is too Big, please select a file less than 5MB\",\n          \"error\"\n        );\n      } else if (arr.length > 25) {\n        PopUp(\n          \"Image Quantity Exceed\",\n          \"Maximum 25 Image Allowed At Once\",\n          \"error\"\n        );\n      } else {\n        arr.length &&\n          arr.map((item) => {\n            form.append(\"nft_media\", item, item.name);\n          });\n      }\n    }\n    if (nftName) {\n      form.append(\"nft_name\", nftName);\n    }\n    if (description) {\n      form.append(\"description\", description);\n    }\n    if (externalLinks) {\n      form.append(\"external_link\", externalLinks);\n    } else {\n      form.append(\"external_link\", \"\");\n    }\n    if (licenseType) {\n      form.append(\"licence_type\", licenseType.value);\n    }\n    if (constructionStatus) {\n      form.append(\"construction_status\", constructionStatus.value);\n    }\n    if (creatorCollection.length > 0 && creatorCollectionSelect.length === 0) {\n      let finalData = [];\n      creatorCollection.map((item) => {\n        form.append(\"tags\", item.value);\n        finalData.push(item.value);\n      });\n      // if (finalData.length) form.append('tags', finalData);\n    }\n    if (creatorCollectionSelect.length > 0 || creatorCollection.length > 0) {\n      let finalData = [];\n      creatorCollectionSelect.map((item) => {\n        form.append(\"tags\", item.label);\n        finalData.push(item.label);\n      });\n\n      // if (finalData.length > 0) form.append('tags', finalData);\n    }\n    if (blockchainImage.length) {\n      const arr = Array.from(blockchainImage);\n      let image = arr.filter((file) => !allowedExtensions.exec(file.name));\n      let size = arr.filter((file) => Math.round(file?.size / 1024) >= 5096);\n      if (image.length) {\n        PopUp(\n          \"Only Image Allowed. (JPEG,JPG,PNG,GIF)\",\n          \"Please select allowed image type only.\",\n          \"error\"\n        );\n      } else if (size.length) {\n        PopUp(\n          \"Image Size Exceed\",\n          \"File is too Big, please select a file less than 5MB\",\n          \"error\"\n        );\n      } else {\n        arr.length &&\n          arr.map((item) => {\n            form.append(\"preview_image\", item);\n          });\n      }\n    }\n\n    if (blockchainZip.length) {\n      const arr = Array.from(blockchainZip);\n      let image = arr.filter((file) => !allowedZipExtensions.exec(file.name));\n      let size = arr.filter(\n        (file) => Math.round(Math.round(file?.size / 1024) / 1024) >= 1024\n      );\n      if (image.length) {\n        PopUp(\"Only ZIP Allowed\", \"Please select zip type only.\", \"error\");\n      } else if (size.length) {\n        PopUp(\n          \"ZIP Size Exceeded\",\n          \"File is too Big, please select a file less than 1GB\",\n          \"error\"\n        );\n      }\n      arr.length &&\n        arr.map((item) => {\n          form.append(\"nft_zip_files\", item);\n        });\n    }\n    if (properties) {\n      let prop = properties.map((item) => {\n        if (item?.type) {\n          form.append(\"custom_properties\", JSON.stringify(item));\n        }\n      });\n    }\n    if (typology.length) {\n      const typo = [];\n      typology.map((item) => {\n        form.append(\"typology\", item.value);\n\n        typo.push(item.value);\n      });\n      setTypology(\n        typologyOptions.length &&\n          typologyOptions.filter((item) => typology.includes(item.value))\n      );\n    }\n    if (drawing.length) {\n      const draw = [];\n      drawing.map((item) => {\n        form.append(\"drawing_format\", item.value);\n\n        draw.push(item.value);\n      });\n    }\n    if (blockChain) {\n      form.append(\"blockchain\", blockChain.value);\n    }\n    if (informationType) {\n      form.append(\"information_type\", informationType === \"1\" ? \"2D\" : \"3D\");\n    }\n    if (\n      fileUpload.length ||\n      blockchainImage.length ||\n      blockchainZip.length ||\n      nftName ||\n      description ||\n      externalLinks ||\n      licenseType ||\n      constructionStatus ||\n      creatorCollection ||\n      properties.length ||\n      typology ||\n      informationType ||\n      drawing ||\n      blockChain\n    ) {\n      try {\n        const response = await handleApiCall(\n          \"put\",\n          `${endpoints.editNft}`,\n          form\n        );\n        if (response?.data?.success) {\n          PopUp(\"Updated\", response?.data?.message, \"success\");\n          navigate(`/view-nft/${id}`);\n        } else {\n          PopUp(\"Something Went Wrong\", response?.data?.message, \"error\");\n        }\n      } catch (e) {\n        PopUp(\"Something Went Wrong\", \"Internal Server Error\", \"error\");\n      }\n    }\n  };\n\n  const handleImg = (e, index) => {\n    const newList = previewImages.filter((data, i) => i !== index);\n    setPreviewImages(newList);\n  };\n\n  const handleDeleteNftCreator = async () => {\n    const response = await handleApiCall(\n      \"post\",\n      `${endpoints.removeCreatorNft}`,\n      {\n        id,\n        key: 1,\n      }\n    );\n    if (response?.data?.success) {\n      PopUp(\"NFT Deleted Successful\", \"\", \"success\");\n      navigate(\"/creator-profile\");\n    } else {\n      PopUp(\"Something Went Wrong\", response?.data?.message, \"error\");\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <section className=\"main-pannel-sec add-nft-wrapper\">\n        <div className=\"container\">\n          <div className=\"row mb-4\">\n            <div className=\"col-md-12 p-0 mobile-pd-style\">\n              <div className=\"top-heading-are text-center\">\n                <h2>Edit NFT</h2>\n                <p>\n                  Please follow the Instructions provided below for uploading\n                  Conter required for listing your NFT on the platform. Once\n                  completed, the NFT shall be placed on your profile. The NFT\n                  will then require listing for sale before it can purchased.\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-4\">\n            <div className=\"col-md-6 col-md-6 col-sm-12\">\n              <form className=\"profile-wrap-form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">\n                    Preview File Upload <span className=\"text-danger\">*</span>\n                  </label>\n\n                  <div className=\"drag-drop-wrapper\">\n                    <div className=\"upload-file flex-fill\">\n                      <input\n                        type=\"file\"\n                        name={fileUpload}\n                        multiple\n                        accept=\"image/png,image/jpeg,image/bmp,image/gif\"\n                        onChange={(e) =>\n                          handleNftData(\"fileUpload\", e.target.files)\n                        }\n                      />\n                      <div className=\"mt-3 text-gray mb-2 drag-drop-content\">\n                        <div className=\"font-12 mb-1 weight-500\">\n                          {previewImages && previewImages.length > 0 ? (\n                            <div\n                              className=\"block-img-pre\"\n                              style={{\n                                height: \"350px\",\n                                width: \"100%\",\n                                zIndex: \"-1\",\n                              }}\n                            >\n                              {previewImages &&\n                                previewImages.length > 0 &&\n                                previewImages\n                                  .slice(previewImages.length - 1)\n                                  .map((item) => {\n                                    return (\n                                      <img\n                                        style={{\n                                          width: \"100%\",\n                                          height: \"100%\",\n                                          objectFit: \"cover\",\n                                        }}\n                                        src={item}\n                                        alt=\"images\"\n                                      />\n                                    );\n                                  })}\n                            </div>\n                          ) : (\n                            <div>\n                              Drag &amp; Drop{\" \"}\n                              <span>or browse media from your device</span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"upload-img-details mt-2\">\n                      <span>JPG GIF PNG</span>\n                      <span>Max Size: 5MB</span>\n                    </div>\n                  </div>\n                  {previewImages && previewImages.length > 0 && (\n                    <div className=\"img-box-wrapper\">\n                      {previewImages &&\n                        previewImages.length > 0 &&\n                        previewImages\n                          .slice(0, -1)\n                          .reverse()\n                          .map((item, index) => {\n                            return (\n                              <>\n                                <img src={item} alt=\"images\" />\n                                <i\n                                  class=\"fa-regular fa-x\"\n                                  style={{\n                                    cursor: \"pointer\",\n                                    marginleft: \"-5%\",\n                                  }}\n                                  onClick={(e) => handleImg(e, index + 1)}\n                                  id={index}\n                                ></i>\n                              </>\n                            );\n                          })}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    NFT Name <span className=\"text-danger\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Raha Villas\"\n                    value={nftName}\n                    onChange={(e) => handleNftData(\"nft-name\", e.target.value)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    NFT Description <span className=\"text-danger\">*</span>\n                  </label>\n                  <textarea\n                    value={description}\n                    onChange={(e) =>\n                      handleNftData(\"description\", e.target.value)\n                    }\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>External Link</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    // placeholder=\"https://yoursite.io/item\"\n                    value={externalLinks}\n                    maxLength={75}\n                    onChange={(e) =>\n                      handleNftData(\"external-links\", e.target.value)\n                    }\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    Licence Type <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"slect-option-wrap\">\n                    <Select\n                      defaultValue={licenseType}\n                      value={licenseType}\n                      onChange={(e) => handleNftData(\"licenceType\", e)}\n                      options={optionsLicenseType}\n                      styles={customStyles}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    Construction Status <span className=\"text-danger\">*</span>\n                  </label>\n                  <Select\n                    defaultValue={constructionStatus}\n                    value={constructionStatus}\n                    onChange={(e) => handleNftData(\"constructionStatus\", e)}\n                    options={optionsConstructionStatus}\n                    styles={customStyles}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    Creator Collection <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"creator-collection-box pb-2\">\n                    <CreatableSelect\n                      isMulti\n                      onChange={(e) => handleNftData(\"creatorCollection\", e)}\n                      options={creatorCollection}\n                      placeholder=\"Enter Collection Name\"\n                      styles={customStyles}\n                      value={creatorCollectionSelect}\n                    />\n                  </div>\n                  <div className=\"creator-collection-box pb-2\">\n                    <Select\n                      isMulti={true}\n                      options={creatorCollectionList}\n                      styles={customStyles}\n                      onChange={(e) =>\n                        handleNftData(\"creatorCollectionSelect\", e)\n                      }\n                      value={creatorCollectionSelect}\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div className=\"col-md-6 col-md-6 col-sm-12\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <form className=\"profile-wrap-form\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">\n                        Blockchain Preview{\" \"}\n                        <span className=\"text-danger\">*</span>\n                      </label>\n                      <div className=\"drag-drop-wrapper drag-drop-wrapper1\">\n                        <div className=\"upload-file flex-fill\">\n                          <input\n                            type=\"file\"\n                            accept=\"image/png,image/jpg,image/bmp,image/gif\"\n                            onChange={(e) =>\n                              handleNftData(\"blockchainImage\", e.target.files)\n                            }\n                          />\n                          <div className=\"drag-drop-content\">\n                            {blockchainImagePreview.length > 0 ? (\n                              <div className=\"block-img-pre\">\n                                {blockchainImagePreview.length > 0 &&\n                                  blockchainImagePreview.map((item) => {\n                                    return <img src={item} alt=\"images\" />;\n                                  })}\n                              </div>\n                            ) : (\n                              <div>\n                                Drag &amp; Drop{\" \"}\n                                <span>or browse media from your device</span>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"upload-img-details mt-2\">\n                          <span>JPG GIF PNG</span>\n                          <span>Max Size: 5MB</span>\n                        </div>\n                      </div>\n                    </div>\n                    {/* {blockchainImagePreview.length > 0 && (\n                      <div className=\"img-box-wrapper\">\n                        {blockchainImagePreview.length > 0 &&\n                          blockchainImagePreview.map((item) => {\n                            return <img src={item} alt=\"images\" />;\n                          })}\n                      </div>\n                    )} */}\n                  </form>\n                </div>\n                <div className=\"col-md-6\">\n                  <form className=\"profile-wrap-form\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">\n                        Blockchain ZIP File{\" \"}\n                        <span className=\"text-danger\">*</span>\n                      </label>\n                      <div className=\"drag-drop-wrapper drag-drop-wrapper1\">\n                        <div\n                          className=\"upload-file flex-fill\"\n                          style={{ border: \"2px dashed #dadee2\" }}\n                        >\n                          <input\n                            type=\"file\"\n                            accept=\"application/x-zip-compressed\"\n                            onChange={(e) =>\n                              handleNftData(\"blockchainZip\", e.target.files)\n                            }\n                          />\n                          <div className=\"drag-drop-content\">\n                            <div>\n                              {blockchainZip.length > 0 ? (\n                                <div>{blockchainZip[0]?.name}</div>\n                              ) : (\n                                <div>\n                                  <span>\n                                    {nftData?.zip_names?.zip_name || \"\"}\n                                  </span>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"upload-img-details mt-2\">\n                          <span>ZIP</span>\n                          <span>Max Size: 1GB</span>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n              <form className=\"profile-wrap-form\">\n                <div className=\"form-group creators-activiti-wrap\">\n                  <label>Custom Properties</label>\n                  <div className=\"row\">\n                    {properties &&\n                      properties.length > 0 &&\n                      properties.map((item, indx) => {\n                        return (\n                          <>\n                            <div className=\"col-md-6\">\n                              {indx < 1 && <span>Type</span>}\n\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Type\"\n                                value={item.type}\n                                onChange={(e) =>\n                                  handleNftData(\n                                    \"properties\",\n                                    e.target.value,\n                                    \"type\",\n                                    indx\n                                  )\n                                }\n                              />\n                            </div>\n                            <div className=\"col-md-6\">\n                              {indx < 1 && <span>Name</span>}\n                              <div className=\"form-group\">\n                                <input\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  placeholder=\"Name\"\n                                  value={item.name}\n                                  onChange={(e) =>\n                                    handleNftData(\n                                      \"properties\",\n                                      e.target.value,\n                                      \"name\",\n                                      indx\n                                    )\n                                  }\n                                />\n                                <i\n                                  className=\"fas fa-times\"\n                                  onClick={() =>\n                                    handleRemoveCustomProperties(indx)\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </>\n                        );\n                      })}\n                    <a\n                      href=\"javascript:void(0);\"\n                      onClick={handleCustomProperties}\n                    >\n                      Add More\n                    </a>\n                  </div>\n                </div>\n                <div className=\"form-group\" style={{ zIndex: \"15\" }}>\n                  <label>\n                    Typology <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"creator-collection-box1\">\n                    <Select\n                      isMulti={true}\n                      options={typologyOptions}\n                      styles={customStyles}\n                      onChange={(e) => handleNftData(\"typology\", e)}\n                      value={typology}\n                      showNewOptionAtTop={true}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    Information Type <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"d-flex information-wrap\">\n                    <span\n                      className={informationType === \"1\" ? \"blue-color\" : \"\"}\n                      onClick={() => handleNftData(\"infoType\", \"1\")}\n                    >\n                      2D\n                    </span>\n                    <span\n                      className={informationType === \"2\" ? \"blue-color\" : \"\"}\n                      onClick={() => handleNftData(\"infoType\", \"2\")}\n                    >\n                      3D\n                    </span>\n                  </div>\n                </div>\n                <div className=\"form-group\" style={{ zIndex: \"6\" }}>\n                  <label>\n                    Drawing Format <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"creator-collection-box1\">\n                    <Select\n                      isMulti={true}\n                      options={optionsDrawingFormat}\n                      onChange={(e) => handleNftData(\"drawing\", e)}\n                      value={drawing}\n                      showNewOptionAtTop={true}\n                      styles={customStyles}\n                    />\n                    {/* <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Drawing Format\"\n                      style={{ margin: \"1rem 0\" }}\n                      onChange={(e) =>\n                        handleNftData(\"customDrawing\", e.target.value)\n                      }\n                      value={customDrawing}\n                    /> */}\n                    {/* <a\n                      href=\"javascript:void(0);\"\n                      className=\"common_button\"\n                      onClick={handleDrawingFormat}\n                    >\n                      Add More\n                    </a> */}\n                  </div>\n                </div>\n                <div className=\"form-group\" style={{ zIndex: \"5\" }}>\n                  <label>\n                    Blockchain <span className=\"text-danger\">*</span>\n                  </label>\n                  <Select\n                    defaultValue={blockChain}\n                    value={blockChain}\n                    onChange={(e) => handleNftData(\"blockChain\", e)}\n                    options={optionsForEtherium}\n                    styles={customStyles}\n                  />\n                </div>\n                {/* <div className=\"form-group\" style={{ zIndex: \"5\" }}>\n                  <label>\n                    Blockchain <span className=\"text-danger\">*</span>\n                  </label>\n                  <Select\n                    defaultValue={blockChain}\n                    value={blockChain}\n                    onChange={(e) => handleNftData(\"blockChain\", e)}\n                    options={optionsForEtherium}\n                    styles={customStyles}\n                  />\n                </div> */}\n                <div className=\"col-49 mt-4\">\n                  <a\n                    className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    onClick={handleSubmit}\n                  >\n                    Submit\n                  </a>\n                  <a\n                    className=\"btn btn-block btn-trinary btn-lg font-weight-medium mt-0\"\n                    onClick={() => setShowDel(true)}\n                  >\n                    Delete\n                  </a>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Modal show={show} onClose={() => setShow(false)}>\n        <AddNftModal id={nftResponse?._id} />\n      </Modal>\n      <Modal show={showDel} onClose={() => setShowDel(false)}>\n        <div>\n          <div className=\"\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-body\">\n                <div className=\"modal-inner-area text-center\">\n                  <h2>Delete your NFT?</h2>\n                  <p>\n                    Are you sure you want to delete your NFT from the platform?\n                  </p>\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center\" style={{ gap: \"1em\" }}>\n                <a\n                  className=\"btn btn-block buying_decline\"\n                  onClick={handleDeleteNftCreator}\n                >\n                  Yes\n                </a>\n                <a\n                  className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                  onClick={() => setShowDel(false)}\n                >\n                  No\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n      <HomePageFooter />\n    </>\n  );\n};\n\nexport default EditNft;\n"],"names":["id","useState","endpoints","url","style","textAlign","padding","fontSize","color","className","styles","FacebookShareButton","class","LinkedinShareButton","WhatsappShareButton","TelegramShareButton","to","customStyles","option","provided","state","margin","background","boxShadow","indicatorSeparator","border","dropdownIndicator","paddingRight","control","borderRadius","outline","minHeight","menu","borderColor","singleValue","opacity","isDisabled","transition","useParams","navigate","useDispatch","useNavigate","show","setShow","showDel","setShowDel","nftResponse","informationType","setInformationType","licenseType","setLicenseType","constructionStatus","setConstructionStatus","creatorCollection","setCreatorCollection","creatorCollectionList","setCreatorCollectionList","creatorCollectionSelect","setCreatorCollectionSelect","blockChain","setBlockChain","fileUpload","setFileUpload","previewImages","setPreviewImages","blockchainImagePreview","setBlockchainImagePreview","blockchainImage","setBlockchainImage","blockchainZip","setBlockchainZip","nftName","setNftName","externalLinks","setExternalLinks","description","setDiscription","properties","setProperties","typology","setTypology","typologyOptions","setTypologyOptions","drawing","setDrawing","setCustomDrawing","nftData","setNftData","value","label","optionsDrawingFormat","allowedExtensions","allowedZipExtensions","useEffect","getTopologyList","getCollectionList","getNftDetail","nft_name","external_link","licence_type","construction_status","tags","custom_properties","information_type","drawing_format","blockchain","nft_media","preview_image","result","length","filter","item","newTAgs","map","push","_id","name","customProperties","console","log","handleApiCall","response","data","success","finalData","PopUp","message","handleNftData","field","key","index","prev","arr","Array","from","file","exec","toLowerCase","reader","FileReader","onloadend","readAsDataURL","indx","handleSubmit","e","form","FormData","append","image","size","Math","round","type","JSON","stringify","typo","includes","draw","handleDeleteNftCreator","htmlFor","multiple","accept","onChange","target","files","height","width","zIndex","slice","objectFit","src","alt","reverse","cursor","marginleft","onClick","newList","i","handleImg","placeholder","maxLength","defaultValue","options","isMulti","zip_names","zip_name","href","showNewOptionAtTop","onClose","role","gap"],"sourceRoot":""}