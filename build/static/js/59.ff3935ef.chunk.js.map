{"version":3,"file":"static/js/59.ff3935ef.chunk.js","mappings":"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","sources":["webpack://metaprops-web/./src/components/AddNftModal/AddNftModal.module.css?2122","components/AddNftModal/index.js","pages/AddNft/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"shares\":\"AddNftModal_shares__3NGqN\",\"shares_title\":\"AddNftModal_shares_title__88JuL\",\"share_icons\":\"AddNftModal_share_icons__zZWJQ\",\"or_tag\":\"AddNftModal_or_tag__NMQ-0\",\"or_line\":\"AddNftModal_or_line__L-ZhC\",\"icon\":\"AddNftModal_icon__LVhf0\",\"or_box\":\"AddNftModal_or_box__BuVWo\",\"share_text\":\"AddNftModal_share_text__j4owR\",\"btn_style\":\"AddNftModal_btn_style__wO8+6\"};","import React, { useState } from 'react';\nimport {\n\tFacebookShareButton,\n\tLinkedinShareButton,\n\tTelegramShareButton,\n\tWhatsappShareButton\n} from 'react-share';\nimport { Link } from 'react-router-dom';\n\nimport styles from './AddNftModal.module.css';\nimport { endpoints } from './../../utils/endpoints';\n\nconst AddNftModal = ({ id }) => {\n\tconst [url, setUrl] = useState(`${endpoints.baseShareUrl}/${id}`);\n\treturn (\n\t\t<div style={{ textAlign: 'center', padding: '1em' }}>\n\t\t\t<h2 style={{ fontSize: '27px' }}>NFT Added successfully</h2>\n\t\t\t<p>Check on your profile to view the NFT or click the link below.</p>\n\t\t\t<div>\n\t\t\t\t<p style={{ fontSize: '17px', color: 'black' }}>Share to</p>\n\t\t\t\t<div className={styles.share_icons}>\n\t\t\t\t\t<div className={styles.icon}>\n\t\t\t\t\t\t<FacebookShareButton url={url}>\n\t\t\t\t\t\t\t<i class='fa-brands fa-facebook-f'></i>\n\t\t\t\t\t\t</FacebookShareButton>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={styles.icon}>\n\t\t\t\t\t\t<LinkedinShareButton url={url}>\n\t\t\t\t\t\t\t<i class='fa-brands fa-linkedin-in'></i>\n\t\t\t\t\t\t</LinkedinShareButton>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={styles.icon}>\n\t\t\t\t\t\t<WhatsappShareButton url={url}>\n\t\t\t\t\t\t\t<i class='fa-brands fa-whatsapp'></i>\n\t\t\t\t\t\t</WhatsappShareButton>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={styles.icon}>\n\t\t\t\t\t\t<TelegramShareButton url={url}>\n\t\t\t\t\t\t\t<i class='fa-brands fa-telegram'></i>\n\t\t\t\t\t\t</TelegramShareButton>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='modal-footer mt-4 p-0'>\n\t\t\t\t<Link\n\t\t\t\t\tclassName='btn btn-block  btn-primary btn-lg font-weight-medium auth-form-btn'\n\t\t\t\t\tid='js-ready-sell-modal2'\n\t\t\t\t\tto={`/view-nft/${id}`}\n\t\t\t\t>\n\t\t\t\t\tView NFT\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddNftModal;\n","import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\n//Components\nimport Header from \"../../components/Header\";\nimport HomePageFooter from \"../../components/Home/HomePageFooter\";\nimport Modal from \"../../components/commons/Modal/Modal.jsx\";\nimport AddNftModal from \"../../components/AddNftModal\";\nimport { PopUp } from \"../../utils/utility\";\nimport { handleApiCall } from \"../../api\";\nimport { endpoints } from \"../../utils/endpoints\";\nimport { setCurrentNft } from \"../../redux/Slice/NftDetails\";\nimport Loader from \"../../components/commons/Loader\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nconst customStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    color: \"black\",\n    // padding: 5,\n    margin: \"0px\",\n    background: \"#e8e9e9\",\n    \":hover\": {\n      background: \"#4472c7\",\n      color: \"white\",\n    },\n    boxShadow: \"none\",\n  }),\n  indicatorSeparator: () => ({\n    border: \"none\",\n    color: \"black\",\n  }),\n  dropdownIndicator: () => ({\n    color: \"black\",\n    paddingRight: \".5em\",\n  }),\n  control: (provided, state) => ({\n    ...provided,\n    background: \"#e8e9e9\",\n    // margin: \"10px 0px\",\n    border: \"0px solid\",\n    borderRadius: \"0px\",\n    outline: \"none\",\n    boxShadow: \"none\",\n    // height: 45,\n    minHeight: 45,\n  }),\n  input: () => ({\n    margin: \"0px\",\n  }),\n  menu: (provided, state) => ({\n    ...provided,\n    background: \"#e8e9e9\",\n    margin: \"5px 0px\",\n    borderColor: \"#e8e9e9\",\n    borderRadius: \"0px\",\n    padding: \"0px\",\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = \"opacity 300ms\";\n\n    return { ...provided, opacity, transition };\n  },\n};\n\nconst AddNft = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const walletAddress = useSelector(\n    (state) => state.registerUser.userTokens?.data?.wallet_address\n  );\n  const userDetails = useSelector(\n    (state) => state.registerUser.userTokens?.data?._id\n  );\n  const [show, setShow] = useState();\n  const [nftResponse, setNftResponse] = useState();\n  const [informationType, setInformationType] = useState(\"1\");\n  const [informationTypeError, setInformationTypeError] = useState(null);\n  const [licenseType, setLicenseType] = useState(\"\");\n  const [licenseTypeError, setLicenseTypeError] = useState(\"\");\n  const [constructionStatus, setConstructionStatus] = useState(\"\");\n  const [constructionStatusError, setConstructionStatusError] = useState(\"\");\n  const [creatorCollection, setCreatorCollection] = useState([]);\n  const [creatorCollectionList, setCreatorCollectionList] = useState([]);\n  const [creatorCollectionError, setCreatorCollectionError] = useState(\"\");\n  const [creatorCollectionSelect, setCreatorCollectionSelect] = useState([]);\n  const [creatorCollectionSelectError, setCreatorCollectionSelectError] =\n    useState(\"\");\n  const [blockChain, setBlockChain] = useState(\"\");\n  const [blockChainError, setBlockChainError] = useState(\"\");\n  const [fileUpload, setFileUpload] = useState([]);\n  const [previewImages, setPreviewImages] = useState([]);\n  const [fileUploadError, setFileUploadError] = useState(\"\");\n  const [blockchainImage, setBlockchainImage] = useState([]);\n  const [blockchainImagePreview, setBlockchainImagePreview] = useState([]);\n  const [blockchainImageError, setBlockchainImageError] = useState(\"\");\n  const [blockchainZip, setBlockchainZip] = useState([]);\n  const [blockchainZipError, setBlockchainZipError] = useState(\"\");\n  const [nftName, setNftName] = useState(\"\");\n  const [nftNameError, setNftNameError] = useState(\"\");\n  const [externalLinks, setExternalLinks] = useState(\"\");\n  const [externalLinksError, setExternalLinksError] = useState(\"\");\n  const [description, setDiscription] = useState(\"\");\n  const [descriptionError, setDiscriptionError] = useState(\"\");\n  const [properties, setProperties] = useState([]);\n  const [propertiesError, setPropertiesError] = useState(\"\");\n  const [typology, setTypology] = useState([]);\n  const [typologyOptions, setTypologyOptions] = useState([]);\n  const [typologyError, setTypologyError] = useState(\"\");\n  const [drawing, setDrawing] = useState([]);\n  const [customDrawing, setCustomDrawing] = useState([]);\n  const [drawingError, setDrawingError] = useState(\"\");\n  const [isAgreed, setIsAgreed] = useState(false);\n  const [isAgreedError, setIsAgreedError] = useState(\"\");\n  const [isProgress, setIsProgress] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [optionsDrawingFormat, setOptionsDrawingFormat] = useState([\n    { value: \"3dm\", label: \"3DM\" },\n    { value: \"3ds\", label: \"3DS\" },\n    { value: \"3mf\", label: \"3MF\" },\n    { value: \"amf\", label: \"AMF\" },\n    { value: \"blend\", label: \"BLEND\" },\n    { value: \"dae\", label: \"DAE\" },\n    { value: \"dgn\", label: \"DGN\" },\n    { value: \"dwf\", label: \"DWF\" },\n    { value: \"dwg\", label: \"DWG\" },\n    { value: \"dxf\", label: \"DXF\" },\n    { value: \"exl\", label: \"EXL\" },\n    { value: \"fbx\", label: \"FBX\" },\n    { value: \"glb\", label: \"GLB\" },\n    { value: \"gltf\", label: \"GLTF\" },\n    { value: \"iam\", label: \"IAM\" },\n    { value: \"ifc\", label: \"IFC\" },\n    { value: \"iges\", label: \"IGES\" },\n    { value: \"ipt\", label: \"IPT\" },\n    { value: \"jpg\", label: \"JPG\" },\n    { value: \"ma\", label: \"MA\" },\n    { value: \"max\", label: \"MAX\" },\n    { value: \"obj\", label: \"OBJ\" },\n    { value: \"pdf\", label: \"PDF\" },\n    { value: \"ply\", label: \"PLY\" },\n    { value: \"png\", label: \"PNG\" },\n    { value: \"rfa\", label: \"RFA\" },\n    { value: \"rft\", label: \"RFT\" },\n    { value: \"rte\", label: \"RTE\" },\n    { value: \"rvt\", label: \"RVT\" },\n    { value: \"sat\", label: \"SAT\" },\n    { value: \"skp\", label: \"SKP\" },\n    { value: \"sldasm\", label: \"SLDASM\" },\n    { value: \"sldprt\", label: \"SLDPRT\" },\n    { value: \"step\", label: \"STEP\" },\n    { value: \"stl\", label: \"STL\" },\n    { value: \"stp\", label: \"STP\" },\n    { value: \"text\", label: \"TXT\" },\n    { value: \"uasset\", label: \"UASSET\" },\n    { value: \"unity\", label: \"UNITY\" },\n    { value: \"x3d\", label: \"X3D\" },\n    { value: \"xsi\", label: \"XSI\" },\n  ]);\n  const optionsLicenseType = [\n    { value: \"Constructible\", label: \"Constructible\" },\n    { value: \"Digital Experience\", label: \"Digital Experience\" },\n  ];\n  const optionsConstructionStatus = [\n    { value: \"Real World Completed\", label: \"Real World Completed\" },\n    { value: \"Digital Design\", label: \"Digital Design\" },\n  ];\n  const optionsForEtherium = [\n    { value: \"Eth on polygon\", label: \"ETH on polygon\" },\n  ];\n\n  const allowedExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.gif)$/i;\n  const allowedZipExtensions = /(\\.rar|\\.zip)$/i;\n\n  useEffect(() => {\n    getTopologyList();\n    getCollectionList();\n  }, []);\n\n  const clearState = () => {\n    setNftNameError(\"\");\n    setFileUploadError(\"\");\n    setDiscriptionError(\"\");\n    setExternalLinksError(\"\");\n    setLicenseTypeError(\"\");\n    setConstructionStatusError(\"\");\n    setCreatorCollectionError(\"\");\n    setCreatorCollectionSelectError(\"\");\n    setBlockChainError(\"\");\n    setBlockchainImageError(\"\");\n    setBlockchainZipError(\"\");\n    setTypologyError(\"\");\n    setDrawingError(\"\");\n  };\n\n  const getTopologyList = async () => {\n    const response = await handleApiCall(\"get\", `${endpoints.getTypology}`);\n    if (response?.data?.success) {\n      const finalData = [];\n      response?.data?.data.map((item) => {\n        finalData.push({\n          label: item.name,\n          value: item._id,\n        });\n      });\n      setTypologyOptions(finalData);\n    } else {\n      PopUp(\"Something Went Wrong\", response?.data?.message, \"error\");\n    }\n  };\n\n  const getCollectionList = async () => {\n    const response = await handleApiCall(\"get\", `${endpoints.getCollection}`);\n    if (response?.data?.success) {\n      const finalData = [];\n      response?.data?.data.map((item) => {\n        finalData.push({\n          label: item.name,\n          value: item._id,\n        });\n      });\n      setCreatorCollectionList(finalData);\n    } else {\n      PopUp(\"Something Went Wrong\", response?.data?.message, \"error\");\n    }\n  };\n\n  const getBase64 = (file) =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (err) => reject(err);\n    });\n\n  const handleNftData = async (field, value, key, index) => {\n    setIsProgress(false);\n    clearState();\n    if (field === \"fileUpload\") {\n      setFileUpload([]);\n      setPreviewImages([]);\n      setFileUpload([...fileUpload, ...value]);\n      if (value) {\n        const arr = Array.from(value);\n        let image = arr.filter(\n          (file) => !allowedExtensions.exec(file.name.toLowerCase())\n        );\n        const images = await Promise.all(\n          [...value].map((imageInput) =>\n            imageInput ? getBase64(imageInput) : null\n          )\n        );\n        setPreviewImages(images);\n        PopUp(\n          arr.length <= 1 ? \"Image uploaded\" : \"Images uploaded\",\n          arr.length <= 1\n            ? \"Image has been uploaded sucessfully.\"\n            : \"Images have been uploaded sucessfully.\",\n          \"success\"\n        );\n      }\n    } else if (field === \"nft-name\") {\n      setNftName(value);\n    } else if (field === \"external-links\") {\n      setExternalLinks(value);\n    } else if (field === \"description\") {\n      setDiscription(value);\n    } else if (field === \"creatorCollectionSelect\") {\n      setCreatorCollectionSelect(value);\n    } else if (field === \"licenceType\") {\n      setLicenseType(value);\n    } else if (field === \"constructionStatus\") {\n      setConstructionStatus(value);\n    } else if (field === \"creatorCollection\") {\n      setCreatorCollection(value);\n    } else if (field === \"blockChain\") {\n      setBlockChain(value);\n    } else if (field === \"properties\") {\n      properties.length &&\n        properties.map((item, indx) => {\n          if (index === indx) {\n            properties[indx] = { ...item, [key]: value };\n          }\n        });\n    } else if (field === \"typology\") {\n      setTypology(value);\n    } else if (field === \"drawing\") {\n      setDrawing(value);\n    } else if (field === \"customDrawing\") {\n      setCustomDrawing(value);\n    } else if (field === \"blockchainImage\") {\n      setBlockchainImage([]);\n      setBlockchainImage(value);\n      if (value) {\n        const arr = Array.from(value);\n        let image = arr.filter(\n          (file) => !allowedExtensions.exec(file.name.toLowerCase())\n        );\n\n        arr.map((item) => {\n          let reader = new FileReader();\n\n          reader.onloadend = () => {\n            setBlockchainImagePreview((prev) => [reader.result]);\n          };\n\n          reader.readAsDataURL(item);\n        });\n      }\n      PopUp(\n        \"Image uploaded\",\n        \"Image has been uploaded sucessfully.\",\n        \"success\"\n      );\n    } else if (field === \"blockchainZip\") {\n      setBlockchainZip([]);\n      setBlockchainZip(value);\n      PopUp(\n        \"Zip file uploaded\",\n        \"Zip file has been Uploaded Successfully\",\n        \"success\"\n      );\n    } else if (field === \"agree\") {\n      setIsAgreed(!isAgreed);\n    } else if (field === \"infoType\") {\n      setInformationType(value);\n    } else if (field === \"collection\") {\n      setCreatorCollectionSelect(value);\n    }\n  };\n\n  const handleCustomProperties = () => {\n    if(properties.length > 9) {\n      PopUp(\"You can not add more than 10 custom properties\", \"\", \"error\");\n      return\n    }\n    setProperties((prev) => [...prev, { type: \"\", name: \"\" }]);\n  };\n\n  const handleDrawingFormat = () => {\n    if (customDrawing) {\n      setOptionsDrawingFormat((prev) => [\n        ...prev,\n        { value: customDrawing, label: customDrawing },\n      ]);\n    }\n    setCustomDrawing(\"\");\n  };\n\n  const handleRemoveCustomProperties = (index) => {\n    setProperties(properties.filter((item, indx) => indx !== index));\n  };\n\n  const handleSubmit = async (e) => {\n    let form = new FormData();\n    if (isAgreed) {\n      if (walletAddress) {\n        form.append(\"owner_addr\", walletAddress);\n      } else {\n        PopUp(\"Unauthorized\", \"Please Login\", \"error\");\n        return;\n      }\n      if (fileUpload.length) {\n        const arr = Array.from(fileUpload);\n        let image = arr.filter((file) => !allowedExtensions.exec(file.name));\n        let size = arr.filter((file) => Math.round(file?.size / 1024) >= 5096);\n        if (image.length) {\n          PopUp(\n            \"Only Image Allowed. (JPEG,JPG,PNG,GIF)\",\n            \"Please select allowed image type only.\",\n            \"error\"\n          );\n          return;\n        } else if (size.length) {\n          PopUp(\n            \"Image Size Exceed\",\n            \"File is too Big, please select a file less than 5MB\",\n            \"error\"\n          );\n          return;\n        } else if (arr.length > 25) {\n          PopUp(\n            \"Image Quantity Exceed\",\n            \"Maximum 25 Image Allowed At Once\",\n            \"error\"\n          );\n          return;\n        } else {\n          arr.length &&\n            arr.map((item) => {\n              form.append(\"nft_media\", item, item.name);\n            });\n        }\n      } else {\n        setFileUploadError(\"Please select Preview Files\");\n        return;\n      }\n      if (nftName) {\n        form.append(\"nft_name\", nftName);\n      } else {\n        setNftNameError(\"Please enter NFT name\");\n        return;\n      }\n      if (description) {\n        form.append(\"description\", description);\n      } else {\n        setDiscriptionError(\"Please Enter Description\");\n        return;\n      }\n      if (externalLinks) {\n        form.append(\"external_link\", externalLinks);\n      } else {\n        form.append(\"external_link\", \"\");\n      }\n      if (licenseType) {\n        form.append(\"licence_type\", licenseType.value);\n      } else {\n        setLicenseTypeError(\"Please Select License Type\");\n        return;\n      }\n      if (constructionStatus) {\n        form.append(\"construction_status\", constructionStatus.value);\n      } else {\n        setConstructionStatusError(\"Please Select Construction Status\");\n        return;\n      }\n      if (\n        creatorCollection.length > 0 &&\n        creatorCollectionSelect.length === 0\n      ) {\n        let finalData = [];\n\n        if (creatorCollection.length > 1) {\n          creatorCollection.map((item) => {\n            form.append(\"tags\", item.value && item.value);\n          });\n        } else {\n          creatorCollection.map((item) => {\n            if (item.label) finalData.push(item.value);\n          });\n          form.append(\"tags\", finalData);\n        }\n      }\n      if (creatorCollectionSelect.length > 0 || creatorCollection.length > 0) {\n        let finalData = [];\n        if (creatorCollectionSelect.length > 1) {\n          creatorCollectionSelect.map((item) => {\n            if (item.label) form.append(\"tags\", item.label);\n          });\n        } else {\n          creatorCollectionSelect.map((item) => {\n            if (item.label) finalData.push(item.label);\n          });\n          form.append(\"tags\", finalData);\n        }\n      } else {\n        setCreatorCollectionError(\"Please Enter or Select Creator Collection\");\n        return;\n      }\n      if (blockchainImage.length) {\n        const arr = Array.from(blockchainImage);\n        let image = arr.filter((file) => !allowedExtensions.exec(file.name));\n        let size = arr.filter((file) => Math.round(file?.size / 1024) >= 5096);\n        if (image.length) {\n          PopUp(\n            \"Only Image Allowed. (JPEG,JPG,PNG,GIF)\",\n            \"Please select allowed image type only.\",\n            \"error\"\n          );\n          return;\n        } else if (size.length) {\n          PopUp(\n            \"Image Size Exceed\",\n            \"File is too Big, please select a file less than 5MB\",\n            \"error\"\n          );\n          return;\n        } else {\n          arr.length &&\n            arr.map((item) => {\n              form.append(\"preview_image\", item);\n            });\n        }\n      } else {\n        setBlockchainImageError(\"Please Select Blockchain Preview Image\");\n        return;\n      }\n      if (blockchainZip.length) {\n        const arr = Array.from(blockchainZip);\n        let image = arr.filter((file) => !allowedZipExtensions.exec(file.name));\n        let size = arr.filter(\n          (file) => Math.round(Math.round(file?.size / 1024) / 1024) >= 1024\n        );\n        if (image.length) {\n          PopUp(\"Only ZIP Allowed\", \"Please select zip type only.\", \"error\");\n          return;\n        } else if (size.length) {\n          PopUp(\n            \"ZIP Size Exceeded\",\n            \"File is too Big, please select a file less than 1GB\",\n            \"error\"\n          );\n          return;\n        } else {\n          arr.length &&\n            arr.map((item) => {\n              form.append(\"nft_zip_files\", item);\n            });\n        }\n      } else {\n        setBlockchainZipError(\"Please Select ZIP File.\");\n        return;\n      }\n      if (properties.length) {\n        form.append(\"custom_properties\", JSON.stringify(properties));\n      }\n      if (typology.length) {\n        const typo = [];\n        typology.map((item) => {\n          form.append(\"typology\", item.value);\n          typo.push(item.value);\n        });\n      } else {\n        setTypologyError(\"Please Select Typology\");\n        return;\n      }\n      if (drawing.length) {\n        const draw = [];\n        drawing.map((item) => {\n          form.append(\"drawing_format\", item.value);\n\n          draw.push(item.value);\n        });\n      } else {\n        setDrawingError(\"Please Select Drawing Format\");\n        return;\n      }\n      if (blockChain) {\n        form.append(\"blockchain\", blockChain.value);\n      } else {\n        setBlockChainError(\"Please Select A BlockChain\");\n        return;\n      }\n      if (informationType) {\n        form.append(\"information_type\", informationType === \"1\" ? \"2D\" : \"3D\");\n      } else {\n        setInformationTypeError(\"Please Select Information Type\");\n        return;\n      }\n      let collect_ion =\n        Boolean(creatorCollectionSelect) || Boolean(creatorCollection);\n      if (\n        fileUpload.length &&\n        blockchainImage.length &&\n        blockchainZip.length &&\n        nftName &&\n        description &&\n        licenseType &&\n        constructionStatus &&\n        creatorCollection &&\n        typology &&\n        informationType &&\n        drawing &&\n        blockChain &&\n        collect_ion\n      ) {\n        try {\n          setIsProgress(true);\n          const response = await handleApiCall(\n            \"post\",\n            `${endpoints.addNft}`,\n            form\n          );\n          let myData = new FormData();\n          const arr = Array.from(blockchainZip);\n          arr.length &&\n            arr.map((item) => {\n              myData.append(\"nft_zip_files\", item);\n            });\n\n          if (response?.data?.success) {\n            myData.append(\"id\", response?.data?.data?._id);\n            if (properties.length) {\n              try {\n                let prop = [];\n                properties.map((item) => {\n                  if (item.type && item.name) {\n                    prop.push(item);\n                  }\n                });\n                if (prop.length) {\n                  await handleApiCall(\n                    \"post\",\n                    `${endpoints.addCustomeProperties}`,\n                    {\n                      id: response?.data?.data?._id,\n                      custom_properties: prop,\n                    }\n                  );\n                }\n              } catch (error) {\n                console.error(error?.message);\n              }\n            }\n            try {\n              await handleApiCall(\"post\", `${endpoints.addZip}`, myData);\n              setIsProgress(false);\n              setShow(true);\n              dispatch(setCurrentNft(response?.data?.data));\n              setNftResponse(response?.data?.data);\n            } catch (error) {\n              PopUp(\"Something Went Wrong\", error?.response?.message, \"error\");\n              PopUp(\n                \"Something Went Wrong\",\n                \"This NFT is deleted. Please try again.\",\n                \"error\"\n              );\n            }\n          } else {\n            PopUp(\"Something Went Wrong\", response?.data?.message, \"error\");\n            setIsProgress(false);\n          }\n        } catch (error) {\n          PopUp(\"Internal Server Error\", error.response.message, \"error\");\n          setIsProgress(false);\n        }\n      }\n    } else {\n      setIsAgreedError(\"Please Accept The Terms And Conditions\");\n    }\n  };\n  const _handleCloseAddNftSuccess = async () => {\n    setShow(false);\n    navigate(\"/creator-profile\");\n  };\n\n  const handleImg = (e, index) => {\n    const newList = previewImages.filter((data, i) => i !== index);\n    setPreviewImages(newList);\n  };\n\n  return (\n    <>\n      <Header />\n      <section className=\"main-pannel-sec add-nft-wrapper\">\n        <div className=\"container\">\n          <div className=\"row mb-4\">\n            <div className=\"col-md-12 p-0 mobile-pd-style\">\n              <div className=\"top-heading-are text-center\">\n                <h2>Add NFT</h2>\n                <p>\n                  Please follow the Instructions provided below for uploading\n                  Content required for listing your NFT on the platform. Once\n                  completed, the NFT shall be placed on your profile. The NFT\n                  will then require listing for sale before it can purchased.\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-4\">\n            <div className=\"col-md-6 col-md-6 col-sm-12\">\n              <form className=\"profile-wrap-form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">\n                    Preview File Upload <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"drag-drop-wrapper\">\n                    <div\n                      className=\"upload-file flex-fill\"\n                      style={{\n                        border:\n                          previewImages.length > 0\n                            ? \"none\"\n                            : \"2px dashed #dadee2\",\n                      }}\n                    >\n                      <input\n                        type=\"file\"\n                        name={fileUpload}\n                        multiple\n                        accept=\"image/png,image/jpeg,image/bmp,image/gif\"\n                        onChange={(e) =>\n                          handleNftData(\"fileUpload\", e.target.files)\n                        }\n                      />\n                      <div className=\"mt-3 text-gray mb-2 drag-drop-content\">\n                        <div className=\"font-12 mb-1 weight-500\">\n                          {previewImages.length > 0 ? (\n                            <div\n                              className=\"block-img-pre\"\n                              style={{\n                                height: \"350px\",\n                                width: \"100%\",\n                                zIndex: \"-1\",\n                              }}\n                            >\n                              {previewImages.length > 0 &&\n                                previewImages.slice(0, 1).map((item) => {\n                                  return (\n                                    <img\n                                      style={{\n                                        width: \"100%\",\n                                        height: \"100%\",\n                                        objectFit: \"cover\",\n                                      }}\n                                      src={item}\n                                      alt=\"images\"\n                                    />\n                                  );\n                                })}\n                            </div>\n                          ) : (\n                            <div>\n                              Drag &amp; Drop{\" \"}\n                              <span>or browse media from your device</span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"upload-img-details mt-2\">\n                      <span>JPG GIF PNG</span>\n                      <span>Max Size: 5MB</span>\n                    </div>\n                  </div>\n                  {previewImages.length > 0 && (\n                    <div className=\"img-box-wrapper\">\n                      {previewImages.length > 0 &&\n                        previewImages.slice(1).map((item, index) => {\n                          return (\n                            <>\n                              <img src={item} alt=\"images\" />\n                              <i\n                                class=\"fa-regular fa-x\"\n                                style={{ cursor: \"pointer\", marginleft: \"-5%\" }}\n                                onClick={(e) => handleImg(e, index + 1)}\n                                id={index}\n                              ></i>\n                            </>\n                          );\n                        })}\n                    </div>\n                  )}\n\n                  {fileUploadError && (\n                    <p style={{ color: \"red\" }}>{fileUploadError}</p>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    NFT Name <span className=\"text-danger\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    // placeholder='Raha Villas'\n                    name={nftName}\n                    onChange={(e) => handleNftData(\"nft-name\", e.target.value)}\n                    maxLength={30}\n                  />\n                  {nftNameError && (\n                    <p style={{ color: \"red\" }}>{nftNameError}</p>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    NFT Description <span className=\"text-danger\">*</span>\n                  </label>\n                  <textarea\n                    name={description}\n                    onChange={(e) =>\n                      handleNftData(\"description\", e.target.value)\n                    }\n                    maxLength={1000}\n                  />\n                  {descriptionError && (\n                    <p style={{ color: \"red\" }}>{descriptionError}</p>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <label>External Link</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name={externalLinks}\n                    onChange={(e) =>\n                      handleNftData(\"external-links\", e.target.value)\n                    }\n                  />\n                  {externalLinksError && (\n                    <p style={{ color: \"red\" }}>{externalLinksError}</p>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    Licence Type <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"slect-option-wrap\">\n                    <Select\n                      defaultValue={licenseType}\n                      styles={customStyles}\n                      isSearchable={false}\n                      onChange={(e) => handleNftData(\"licenceType\", e)}\n                      options={optionsLicenseType}\n                    />\n                  </div>\n                  {licenseTypeError && (\n                    <p style={{ color: \"red\" }}>{licenseTypeError}</p>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    IRL Construction Status{\" \"}\n                    <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"slect-option-wrap\">\n                    <Select\n                      defaultValue={constructionStatus}\n                      onChange={(e) => handleNftData(\"constructionStatus\", e)}\n                      options={optionsConstructionStatus}\n                      styles={customStyles}\n                      isSearchable={false}\n                    />\n                  </div>\n                  {constructionStatusError && (\n                    <p style={{ color: \"red\" }}>{constructionStatusError}</p>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    Creator Collection <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"creator-collection-box pb-2\">\n                    <CreatableSelect\n                      isMulti\n                      onChange={(e) => handleNftData(\"creatorCollection\", e)}\n                      options={creatorCollection}\n                      placeholder=\"Enter Collection Name\"\n                      styles={{\n                        option: (provided, state) => ({\n                          ...provided,\n                          color: \"black\",\n                          padding: 5,\n                          margin: \"0px\",\n                          background: \"white\",\n                          \":hover\": {\n                            background: \"#4472c7\",\n                            color: \"white\",\n                          },\n                          boxShadow: \"none\",\n                        }),\n                        indicatorSeparator: () => ({\n                          border: \"none\",\n                          color: \"black\",\n                          textTransform: \"uppercase\",\n                        }),\n                        dropdownIndicator: () => ({\n                          color: \"black\",\n                          paddingRight: \".5em\",\n                          textTransform: \"uppercase\",\n                        }),\n                      }}\n                    />\n                  </div>\n                  <div className=\"creator-collection-box pb-2\">\n                    <Select\n                      isMulti={true}\n                      options={creatorCollectionList}\n                      onChange={(e) =>\n                        handleNftData(\"creatorCollectionSelect\", e)\n                      }\n                      styles={customStyles}\n                      isSearchable={false}\n                      value={creatorCollectionSelect}\n                      showNewOptionAtTop={true}\n                    />\n                  </div>\n                  {creatorCollectionError && (\n                    <p style={{ color: \"red\" }}>{creatorCollectionError}</p>\n                  )}\n                </div>\n              </form>\n            </div>\n            <div className=\"col-md-6 col-md-6 col-sm-12\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <form className=\"profile-wrap-form\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">\n                        Blockchain Preview{\" \"}\n                        <span className=\"text-danger\">*</span>\n                      </label>\n                      <div className=\"drag-drop-wrapper drag-drop-wrapper1\">\n                        <div\n                          className=\"upload-file flex-fill\"\n                          style={{\n                            border:\n                              blockchainImagePreview.length > 0\n                                ? \"none\"\n                                : \"2px dashed #dadee2\",\n                          }}\n                        >\n                          <input\n                            type=\"file\"\n                            accept=\"image/png,image/jpeg,image/bmp,image/gif\"\n                            onChange={(e) =>\n                              handleNftData(\"blockchainImage\", e.target.files)\n                            }\n                          />\n\n                          <div className=\"drag-drop-content\">\n                            {blockchainImagePreview.length > 0 ? (\n                              <div className=\"block-img-pre\">\n                                {blockchainImagePreview.length > 0 &&\n                                  blockchainImagePreview.map((item) => {\n                                    return <img src={item} alt=\"images\" />;\n                                  })}\n                              </div>\n                            ) : (\n                              <div>\n                                Drag &amp; Drop{\" \"}\n                                <span>or browse media from your device</span>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"upload-img-details mt-2\">\n                          <span>JPG GIF PNG</span>\n                          <span>Max Size: 5MB</span>\n                        </div>\n                      </div>\n                    </div>\n                    {blockchainImageError && (\n                      <p style={{ color: \"red\" }}>{blockchainImageError}</p>\n                    )}\n                  </form>\n                </div>\n                <div className=\"col-md-6\">\n                  <form className=\"profile-wrap-form\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">\n                        Blockchain ZIP File{\" \"}\n                        <span className=\"text-danger\">*</span>\n                      </label>\n                      <div className=\"drag-drop-wrapper drag-drop-wrapper1\">\n                        <div\n                          className=\"upload-file flex-fill\"\n                          style={{ border: \"2px dashed #dadee2\" }}\n                        >\n                          <input\n                            type=\"file\"\n                            accept=\"application/x-zip-compressed\"\n                            onChange={(e) =>\n                              handleNftData(\"blockchainZip\", e.target.files)\n                            }\n                          />\n                          <div className=\"drag-drop-content\">\n                            {blockchainZip.length > 0 ? (\n                              <div style={{ margin: \"0.7rem\" }}>\n                                {blockchainZip[0]?.name}\n                              </div>\n                            ) : (\n                              <div>\n                                Drag &amp; Drop{\" \"}\n                                <span>or browse media from your device</span>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"upload-img-details mt-2\">\n                          <span>ZIP</span>\n                          <span>Max Size: 1GB</span>\n                        </div>\n                      </div>\n                    </div>\n                    {blockchainZipError && (\n                      <p style={{ color: \"red\" }}>{blockchainZipError}</p>\n                    )}\n                  </form>\n                </div>\n              </div>\n              <form className=\"profile-wrap-form\">\n                <div className=\"form-group creators-activiti-wrap\">\n                  <label>Custom Properties</label>\n                  <div className=\"row\">\n                    {properties.length > 0 &&\n                      properties.map((item, indx) => {\n                        return (\n                          <>\n                            <div className=\"col-md-6\">\n                              {indx < 1 && <span>Type</span>}\n                              <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                onChange={(e) =>\n                                  handleNftData(\n                                    \"properties\",\n                                    e.target.value,\n                                    \"type\",\n                                    indx\n                                  )\n                                }\n                              />\n                            </div>\n                            <div className=\"col-md-6\">\n                              {indx < 1 && <span>Name</span>}\n\n                              <div className=\"form-group\">\n                                <input\n                                  type=\"text\"\n                                  className=\"form-control\"\n                                  onChange={(e) =>\n                                    handleNftData(\n                                      \"properties\",\n                                      e.target.value,\n                                      \"name\",\n                                      indx\n                                    )\n                                  }\n                                />\n                                <i\n                                  className=\"fas fa-times\"\n                                  onClick={() =>\n                                    handleRemoveCustomProperties(indx)\n                                  }\n                                />\n                              </div>\n                            </div>\n                          </>\n                        );\n                      })}\n                    <a onClick={handleCustomProperties}>Add More</a>\n                  </div>\n                  {propertiesError && (\n                    <p style={{ color: \"red\" }}>{propertiesError}</p>\n                  )}\n                </div>\n                <div className=\"form-group\" style={{ zIndex: \"15\" }}>\n                  <label>\n                    Typology <span className=\"text-danger\">*</span>\n                  </label>\n                  <div>\n                    <Select\n                      isMulti={true}\n                      options={typologyOptions}\n                      onChange={(e) => handleNftData(\"typology\", e)}\n                      value={typology}\n                      showNewOptionAtTop={true}\n                      styles={customStyles}\n                      isSearchable={false}\n                    />\n                  </div>\n                  {typologyError && (\n                    <p style={{ color: \"red\" }}>{typologyError}</p>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <label>\n                    Information Type <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"d-flex information-wrap\">\n                    <span\n                      style={{ cursor: \"pointer\" }}\n                      className={informationType === \"1\" ? \"blue-color\" : \"\"}\n                      onClick={() => handleNftData(\"infoType\", \"1\")}\n                    >\n                      2D\n                    </span>\n                    <span\n                      style={{ cursor: \"pointer\" }}\n                      className={informationType === \"2\" ? \"blue-color\" : \"\"}\n                      onClick={() => handleNftData(\"infoType\", \"2\")}\n                    >\n                      3D\n                    </span>\n                  </div>\n                  {informationTypeError && (\n                    <p style={{ color: \"red\" }}>{informationTypeError}</p>\n                  )}\n                </div>\n                <div className=\"form-group\" style={{ zIndex: \"6\" }}>\n                  <label>\n                    Drawing Format <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"creator-collection-box1 border-0 p-0\">\n                    <Select\n                      isMulti={true}\n                      options={optionsDrawingFormat}\n                      onChange={(e) => handleNftData(\"drawing\", e)}\n                      value={drawing}\n                      showNewOptionAtTop={true}\n                      styles={customStyles}\n                      isSearchable={false}\n                    />\n                  </div>\n                  {drawingError && (\n                    <p style={{ color: \"red\" }}>{drawingError}</p>\n                  )}\n                </div>\n                <div className=\"form-group\" style={{ zIndex: \"5\" }}>\n                  <label>\n                    Blockchain <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"slect-option-wrap\">\n                    <Select\n                      defaultValue={blockChain}\n                      onChange={(e) => handleNftData(\"blockChain\", e)}\n                      options={optionsForEtherium}\n                      styles={customStyles}\n                      isSearchable={false}\n                    />\n                  </div>\n                  {blockChainError && (\n                    <p style={{ color: \"red\" }}>{blockChainError}</p>\n                  )}\n                </div>\n                <div className>\n                  <div className=\"custom-control custom-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"custom-control-input\"\n                      id=\"defaultUnchecked\"\n                      onClick={(e) => handleNftData(\"agree\", e.target.checked)}\n                      checked={isAgreed}\n                    />\n                    <label\n                      className=\"custom-control-label text-gray h6\"\n                      htmlFor=\"defaultUnchecked\"\n                    >\n                      Agree to{\" \"}\n                      <Link to=\"/terms\" target=\"_blank\">\n                        Terms &amp; Conditions{\" \"}\n                        <span className=\"text-danger\">*</span>\n                      </Link>\n                    </label>\n                  </div>\n                  {isAgreedError && (\n                    <p style={{ color: \"red\" }}>{isAgreedError}</p>\n                  )}\n                  <a\n                    className=\"btn mt-4 btn-block btn-primary btn-lg font-weight-medium auth-form-btn pre-loader-btn\"\n                    onClick={isProgress ? \" \" : handleSubmit}\n                  >\n                    {isProgress ? (\n                      <Loader\n                        color=\"white\"\n                        width={18}\n                        height={18}\n                        bgColor=\"#e2e2e2\"\n                      />\n                    ) : (\n                      \"Submit\"\n                    )}\n                  </a>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Modal show={show} onClose={() => _handleCloseAddNftSuccess()}>\n        <AddNftModal id={nftResponse?._id} />\n      </Modal>\n      <HomePageFooter />\n    </>\n  );\n};\n\nexport default AddNft;\n"],"names":["id","useState","endpoints","url","style","textAlign","padding","fontSize","color","className","styles","FacebookShareButton","class","LinkedinShareButton","WhatsappShareButton","TelegramShareButton","to","customStyles","option","provided","state","margin","background","boxShadow","indicatorSeparator","border","dropdownIndicator","paddingRight","control","borderRadius","outline","minHeight","input","menu","borderColor","singleValue","opacity","isDisabled","transition","dispatch","useDispatch","navigate","useNavigate","walletAddress","useSelector","registerUser","userTokens","data","wallet_address","_id","show","setShow","nftResponse","setNftResponse","informationType","setInformationType","informationTypeError","setInformationTypeError","licenseType","setLicenseType","licenseTypeError","setLicenseTypeError","constructionStatus","setConstructionStatus","constructionStatusError","setConstructionStatusError","creatorCollection","setCreatorCollection","creatorCollectionList","setCreatorCollectionList","creatorCollectionError","setCreatorCollectionError","creatorCollectionSelect","setCreatorCollectionSelect","setCreatorCollectionSelectError","blockChain","setBlockChain","blockChainError","setBlockChainError","fileUpload","setFileUpload","previewImages","setPreviewImages","fileUploadError","setFileUploadError","blockchainImage","setBlockchainImage","blockchainImagePreview","setBlockchainImagePreview","blockchainImageError","setBlockchainImageError","blockchainZip","setBlockchainZip","blockchainZipError","setBlockchainZipError","nftName","setNftName","nftNameError","setNftNameError","externalLinks","setExternalLinks","externalLinksError","setExternalLinksError","description","setDiscription","descriptionError","setDiscriptionError","properties","setProperties","propertiesError","typology","setTypology","typologyOptions","setTypologyOptions","typologyError","setTypologyError","drawing","setDrawing","setCustomDrawing","drawingError","setDrawingError","isAgreed","setIsAgreed","isAgreedError","setIsAgreedError","isProgress","setIsProgress","value","label","optionsDrawingFormat","allowedExtensions","allowedZipExtensions","useEffect","getTopologyList","getCollectionList","handleApiCall","response","success","finalData","map","item","push","name","PopUp","message","handleNftData","field","key","index","arr","Array","from","filter","file","exec","toLowerCase","Promise","all","imageInput","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","err","images","length","indx","onloadend","prev","handleSubmit","e","form","FormData","append","image","size","Math","round","JSON","stringify","typo","draw","collect_ion","Boolean","myData","prop","type","custom_properties","console","error","setCurrentNft","_handleCloseAddNftSuccess","htmlFor","multiple","accept","onChange","target","files","height","width","zIndex","slice","objectFit","src","alt","cursor","marginleft","onClick","newList","i","handleImg","maxLength","defaultValue","isSearchable","options","isMulti","placeholder","textTransform","showNewOptionAtTop","checked","bgColor","onClose"],"sourceRoot":""}